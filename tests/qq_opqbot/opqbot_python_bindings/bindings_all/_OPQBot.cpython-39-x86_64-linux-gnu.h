/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package dummy.com/dum/bindings_all */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 9 "OPQBot.go"





// #define Py_LIMITED_API // need full API for PyRun*
#include <Python.h>
typedef uint8_t bool;
// static inline is trick for avoiding need for extra .c file
// the following are used for build value -- switch on reflect.Kind
// or the types equivalent
static inline PyObject* gopy_build_bool(uint8_t val) {
	return Py_BuildValue("b", val);
}
static inline PyObject* gopy_build_int64(int64_t val) {
	return Py_BuildValue("k", val);
}
static inline PyObject* gopy_build_uint64(uint64_t val) {
	return Py_BuildValue("K", val);
}
static inline PyObject* gopy_build_float64(double val) {
	return Py_BuildValue("d", val);
}
static inline PyObject* gopy_build_string(const char* val) {
	return Py_BuildValue("s", val);
}
static inline void gopy_decref(PyObject* obj) { // macro
	Py_XDECREF(obj);
}
static inline void gopy_incref(PyObject* obj) { // macro
	Py_XINCREF(obj);
}
static inline int gopy_method_check(PyObject* obj) { // macro
	return PyMethod_Check(obj);
}
static inline void gopy_err_handle() {
	if(PyErr_Occurred() != NULL) {
		PyErr_Print();
	}
}


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void GoPyInit();

// DecRef decrements the reference count for the specified handle
// and deletes it it goes to zero.
extern void DecRef(long long int handle);

// IncRef increments the reference count for the specified handle.
extern void IncRef(long long int handle);

// NumHandles returns the number of handles currently in use.
extern GoInt NumHandles();

// --- wrapping map: logrus.Fields ---
extern long long int logrus_Fields_CTor();
extern GoInt logrus_Fields_len(long long int handle);
extern char* logrus_Fields_elem(long long int handle, char* _ky);
extern char logrus_Fields_contains(long long int handle, char* _ky);
extern void logrus_Fields_set(long long int handle, char* _ky, char* _vl);
extern void logrus_Fields_delete(long long int handle, char* _ky);
extern long long int logrus_Fields_keys(long long int handle);

// --- wrapping map: logrus.LevelHooks ---
extern long long int logrus_LevelHooks_CTor();
extern GoInt logrus_LevelHooks_len(long long int handle);
extern long long int logrus_LevelHooks_elem(long long int handle, long unsigned int _ky);
extern char logrus_LevelHooks_contains(long long int handle, long unsigned int _ky);
extern void logrus_LevelHooks_set(long long int handle, long unsigned int _ky, long long int _vl);
extern void logrus_LevelHooks_delete(long long int handle, long unsigned int _ky);
extern long long int logrus_LevelHooks_keys(long long int handle);

// --- wrapping slice: []bool ---
extern long long int Slice_bool_CTor();
extern GoInt Slice_bool_len(long long int handle);
extern char Slice_bool_elem(long long int handle, GoInt _idx);
extern long long int Slice_bool_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_bool_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_bool_append(long long int handle, char _vl);

// --- wrapping slice: []byte ---
extern long long int Slice_byte_CTor();
extern GoInt Slice_byte_len(long long int handle);
extern char Slice_byte_elem(long long int handle, GoInt _idx);
extern long long int Slice_byte_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_byte_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_byte_append(long long int handle, char _vl);

// --- wrapping slice: []error ---
extern long long int Slice_error_CTor();
extern GoInt Slice_error_len(long long int handle);
extern char* Slice_error_elem(long long int handle, GoInt _idx);
extern long long int Slice_error_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_error_set(long long int handle, GoInt _idx, char* _vl);
extern void Slice_error_append(long long int handle, char* _vl);

// --- wrapping slice: []float32 ---
extern long long int Slice_float32_CTor();
extern GoInt Slice_float32_len(long long int handle);
extern float Slice_float32_elem(long long int handle, GoInt _idx);
extern long long int Slice_float32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_float32_set(long long int handle, GoInt _idx, float _vl);
extern void Slice_float32_append(long long int handle, float _vl);

// --- wrapping slice: []float64 ---
extern long long int Slice_float64_CTor();
extern GoInt Slice_float64_len(long long int handle);
extern double Slice_float64_elem(long long int handle, GoInt _idx);
extern long long int Slice_float64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_float64_set(long long int handle, GoInt _idx, double _vl);
extern void Slice_float64_append(long long int handle, double _vl);

// --- wrapping slice: []int ---
extern long long int Slice_int_CTor();
extern GoInt Slice_int_len(long long int handle);
extern long long int Slice_int_elem(long long int handle, GoInt _idx);
extern long long int Slice_int_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_int_append(long long int handle, long long int _vl);

// --- wrapping slice: []int16 ---
extern long long int Slice_int16_CTor();
extern GoInt Slice_int16_len(long long int handle);
extern short int Slice_int16_elem(long long int handle, GoInt _idx);
extern long long int Slice_int16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int16_set(long long int handle, GoInt _idx, short int _vl);
extern void Slice_int16_append(long long int handle, short int _vl);

// --- wrapping slice: []int32 ---
extern long long int Slice_int32_CTor();
extern GoInt Slice_int32_len(long long int handle);
extern long int Slice_int32_elem(long long int handle, GoInt _idx);
extern long long int Slice_int32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int32_set(long long int handle, GoInt _idx, long int _vl);
extern void Slice_int32_append(long long int handle, long int _vl);

// --- wrapping slice: []int64 ---
extern long long int Slice_int64_CTor();
extern GoInt Slice_int64_len(long long int handle);
extern long long int Slice_int64_elem(long long int handle, GoInt _idx);
extern long long int Slice_int64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int64_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_int64_append(long long int handle, long long int _vl);

// --- wrapping slice: []int8 ---
extern long long int Slice_int8_CTor();
extern GoInt Slice_int8_len(long long int handle);
extern char Slice_int8_elem(long long int handle, GoInt _idx);
extern long long int Slice_int8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int8_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_int8_append(long long int handle, char _vl);

// --- wrapping slice: []rune ---
extern long long int Slice_rune_CTor();
extern GoInt Slice_rune_len(long long int handle);
extern long int Slice_rune_elem(long long int handle, GoInt _idx);
extern long long int Slice_rune_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_rune_set(long long int handle, GoInt _idx, long int _vl);
extern void Slice_rune_append(long long int handle, long int _vl);

// --- wrapping slice: []string ---
extern long long int Slice_string_CTor();
extern GoInt Slice_string_len(long long int handle);
extern char* Slice_string_elem(long long int handle, GoInt _idx);
extern long long int Slice_string_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_string_set(long long int handle, GoInt _idx, char* _vl);
extern void Slice_string_append(long long int handle, char* _vl);

// --- wrapping slice: []uint ---
extern long long int Slice_uint_CTor();
extern GoInt Slice_uint_len(long long int handle);
extern long long unsigned int Slice_uint_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern void Slice_uint_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint16 ---
extern long long int Slice_uint16_CTor();
extern GoInt Slice_uint16_len(long long int handle);
extern short unsigned int Slice_uint16_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint16_set(long long int handle, GoInt _idx, short unsigned int _vl);
extern void Slice_uint16_append(long long int handle, short unsigned int _vl);

// --- wrapping slice: []uint32 ---
extern long long int Slice_uint32_CTor();
extern GoInt Slice_uint32_len(long long int handle);
extern long unsigned int Slice_uint32_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint32_set(long long int handle, GoInt _idx, long unsigned int _vl);
extern void Slice_uint32_append(long long int handle, long unsigned int _vl);

// --- wrapping slice: []uint64 ---
extern long long int Slice_uint64_CTor();
extern GoInt Slice_uint64_len(long long int handle);
extern long long unsigned int Slice_uint64_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint64_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern void Slice_uint64_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint8 ---
extern long long int Slice_uint8_CTor();
extern GoInt Slice_uint8_len(long long int handle);
extern unsigned char Slice_uint8_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint8_set(long long int handle, GoInt _idx, unsigned char _vl);
extern void Slice_uint8_append(long long int handle, unsigned char _vl);

// --- wrapping slice: []logrus.Hook ---
extern long long int Slice_logrus_Hook_CTor();
extern GoInt Slice_logrus_Hook_len(long long int handle);
extern long long int Slice_logrus_Hook_elem(long long int handle, GoInt _idx);
extern long long int Slice_logrus_Hook_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_logrus_Hook_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_logrus_Hook_append(long long int handle, long long int _vl);

// --- wrapping slice: []logrus.Level ---
extern long long int Slice_logrus_Level_CTor();
extern GoInt Slice_logrus_Level_len(long long int handle);
extern long unsigned int Slice_logrus_Level_elem(long long int handle, GoInt _idx);
extern long long int Slice_logrus_Level_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_logrus_Level_set(long long int handle, GoInt _idx, long unsigned int _vl);
extern void Slice_logrus_Level_append(long long int handle, long unsigned int _vl);

// --- wrapping slice: []interface{} ---
extern long long int Slice_interface__CTor();
extern GoInt Slice_interface__len(long long int handle);
extern char* Slice_interface__elem(long long int handle, GoInt _idx);
extern long long int Slice_interface__subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_interface__set(long long int handle, GoInt _idx, char* _vl);
extern void Slice_interface__append(long long int handle, char* _vl);

// --- wrapping map: map[string]string ---
extern long long int Map_string_string_CTor();
extern GoInt Map_string_string_len(long long int handle);
extern char* Map_string_string_elem(long long int handle, char* _ky);
extern char Map_string_string_contains(long long int handle, char* _ky);
extern void Map_string_string_set(long long int handle, char* _ky, char* _vl);
extern void Map_string_string_delete(long long int handle, char* _ky);
extern long long int Map_string_string_keys(long long int handle);

// ---- Global Variables: can only use functions to access ---
extern long long int OPQBot_FaceMap();
extern void OPQBot_Set_FaceMap(long long int val);

// --- wrapping struct: OPQBot.GroupMemberList ---
extern long long int OPQBot_GroupMemberList_CTor();
extern long long int OPQBot_GroupMemberList_Count_Get(long long int handle);
extern void OPQBot_GroupMemberList_Count_Set(long long int handle, long long int val);
extern long long int OPQBot_GroupMemberList_GroupUin_Get(long long int handle);
extern void OPQBot_GroupMemberList_GroupUin_Set(long long int handle, long long int val);
extern long long int OPQBot_GroupMemberList_LastUin_Get(long long int handle);
extern void OPQBot_GroupMemberList_LastUin_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypePicMsgByUrlContent ---
extern long long int OPQBot_SendTypePicMsgByUrlContent_CTor();
extern char* OPQBot_SendTypePicMsgByUrlContent_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContent_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByUrlContent_PicUrl_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContent_PicUrl_Set(long long int handle, char* val);
extern char OPQBot_SendTypePicMsgByUrlContent_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContent_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.FriendFileResult ---
extern long long int OPQBot_FriendFileResult_CTor();
extern char* OPQBot_FriendFileResult_FileName_Get(long long int handle);
extern void OPQBot_FriendFileResult_FileName_Set(long long int handle, char* val);
extern long long int OPQBot_FriendFileResult_FileSize_Get(long long int handle);
extern void OPQBot_FriendFileResult_FileSize_Set(long long int handle, long long int val);
extern long long int OPQBot_FriendFileResult_FromUin_Get(long long int handle);
extern void OPQBot_FriendFileResult_FromUin_Set(long long int handle, long long int val);
extern char* OPQBot_FriendFileResult_URL_Get(long long int handle);
extern void OPQBot_FriendFileResult_URL_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.Context ---
extern long long int OPQBot_Context_CTor();
extern char OPQBot_Context_Ban_Get(long long int handle);
extern void OPQBot_Context_Ban_Set(long long int handle, char val);
extern long long int OPQBot_Context_NowIndex_Get(long long int handle);
extern void OPQBot_Context_NowIndex_Set(long long int handle, long long int val);
extern long long int OPQBot_Context_MaxIndex_Get(long long int handle);
extern void OPQBot_Context_MaxIndex_Set(long long int handle, long long int val);
extern long long int OPQBot_Context_Bot_Get(long long int handle);
extern void OPQBot_Context_Bot_Set(long long int handle, long long int val);
extern void OPQBot_Context_Next(long long int _handle, long long int currentQQ, char* result, char goRun);

// --- wrapping struct: OPQBot.SendTypePicMsgByLocalContent ---
extern long long int OPQBot_SendTypePicMsgByLocalContent_CTor();
extern char* OPQBot_SendTypePicMsgByLocalContent_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContent_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByLocalContent_Path_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContent_Path_Set(long long int handle, char* val);
extern char OPQBot_SendTypePicMsgByLocalContent_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContent_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypeVoiceByUrlContent ---
extern long long int OPQBot_SendTypeVoiceByUrlContent_CTor();
extern char* OPQBot_SendTypeVoiceByUrlContent_VoiceUrl_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByUrlContent_VoiceUrl_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.VideoMsg ---
extern long long int OPQBot_VideoMsg_CTor();
extern char* OPQBot_VideoMsg_ForwordBuf_Get(long long int handle);
extern void OPQBot_VideoMsg_ForwordBuf_Set(long long int handle, char* val);
extern long long int OPQBot_VideoMsg_ForwordField_Get(long long int handle);
extern void OPQBot_VideoMsg_ForwordField_Set(long long int handle, long long int val);
extern char* OPQBot_VideoMsg_VideoMd5_Get(long long int handle);
extern void OPQBot_VideoMsg_VideoMd5_Set(long long int handle, char* val);
extern char* OPQBot_VideoMsg_VideoSize_Get(long long int handle);
extern void OPQBot_VideoMsg_VideoSize_Set(long long int handle, char* val);
extern char* OPQBot_VideoMsg_VideoUrl_Get(long long int handle);
extern void OPQBot_VideoMsg_VideoUrl_Set(long long int handle, char* val);
extern char* OPQBot_VideoMsg_Tips_Get(long long int handle);
extern void OPQBot_VideoMsg_Tips_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.Cookie ---
extern long long int OPQBot_Cookie_CTor();
extern char* OPQBot_Cookie_ClientKey_Get(long long int handle);
extern void OPQBot_Cookie_ClientKey_Set(long long int handle, char* val);
extern char* OPQBot_Cookie_Cookies_Get(long long int handle);
extern void OPQBot_Cookie_Cookies_Set(long long int handle, char* val);
extern char* OPQBot_Cookie_Gtk_Get(long long int handle);
extern void OPQBot_Cookie_Gtk_Set(long long int handle, char* val);
extern char* OPQBot_Cookie_Gtk32_Get(long long int handle);
extern void OPQBot_Cookie_Gtk32_Set(long long int handle, char* val);
extern char* OPQBot_Cookie_Skey_Get(long long int handle);
extern void OPQBot_Cookie_Skey_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.GroupShutPack ---
extern long long int OPQBot_GroupShutPack_CTor();

// --- wrapping struct: OPQBot.SendTypePicMsgByMd5Content ---
extern long long int OPQBot_SendTypePicMsgByMd5Content_CTor();
extern char* OPQBot_SendTypePicMsgByMd5Content_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5Content_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByMd5Content_Md5_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5Content_Md5_Set(long long int handle, char* val);
extern char OPQBot_SendTypePicMsgByMd5Content_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5Content_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypeTextMsgContentPrivateChat ---
extern long long int OPQBot_SendTypeTextMsgContentPrivateChat_CTor();
extern char* OPQBot_SendTypeTextMsgContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypeTextMsgContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeTextMsgContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeTextMsgContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.UserInfo ---
extern long long int OPQBot_UserInfo_CTor();
extern long long int OPQBot_UserInfo_Code_Get(long long int handle);
extern void OPQBot_UserInfo_Code_Set(long long int handle, long long int val);
extern long long int OPQBot_UserInfo_Default_Get(long long int handle);
extern void OPQBot_UserInfo_Default_Set(long long int handle, long long int val);
extern char* OPQBot_UserInfo_Message_Get(long long int handle);
extern void OPQBot_UserInfo_Message_Set(long long int handle, char* val);
extern long long int OPQBot_UserInfo_Subcode_Get(long long int handle);
extern void OPQBot_UserInfo_Subcode_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.GroupFileResult ---
extern long long int OPQBot_GroupFileResult_CTor();
extern long long int OPQBot_GroupFileResult_Ret_Get(long long int handle);
extern void OPQBot_GroupFileResult_Ret_Set(long long int handle, long long int val);
extern char* OPQBot_GroupFileResult_URL_Get(long long int handle);
extern void OPQBot_GroupFileResult_URL_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.SendTypeJsonContentPrivateChat ---
extern long long int OPQBot_SendTypeJsonContentPrivateChat_CTor();
extern char* OPQBot_SendTypeJsonContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypeJsonContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeJsonContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeJsonContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.GroupJoinPack ---
extern long long int OPQBot_GroupJoinPack_CTor();

// --- wrapping struct: OPQBot.SendTypePicMsgByBase64ContentPrivateChat ---
extern long long int OPQBot_SendTypePicMsgByBase64ContentPrivateChat_CTor();
extern char* OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Base64_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Base64_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Group_Set(long long int handle, long long int val);
extern char OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64ContentPrivateChat_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypePicMsgByMd5ContentPrivateChat ---
extern long long int OPQBot_SendTypePicMsgByMd5ContentPrivateChat_CTor();
extern char* OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Md5s_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Md5s_Set(long long int handle, long long int val);
extern long long int OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Group_Set(long long int handle, long long int val);
extern char OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByMd5ContentPrivateChat_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypeReplyContent ---
extern long long int OPQBot_SendTypeReplyContent_CTor();
extern char* OPQBot_SendTypeReplyContent_Content_Get(long long int handle);
extern void OPQBot_SendTypeReplyContent_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.SendTypeReplyContentPrivateChat ---
extern long long int OPQBot_SendTypeReplyContentPrivateChat_CTor();
extern char* OPQBot_SendTypeReplyContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypeReplyContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeReplyContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeReplyContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeTextMsgContent ---
extern long long int OPQBot_SendTypeTextMsgContent_CTor();
extern char* OPQBot_SendTypeTextMsgContent_Content_Get(long long int handle);
extern void OPQBot_SendTypeTextMsgContent_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.AtMsg ---
extern long long int OPQBot_AtMsg_CTor();
extern char* OPQBot_AtMsg_Content_Get(long long int handle);
extern void OPQBot_AtMsg_Content_Set(long long int handle, char* val);
extern long long int OPQBot_AtMsg_UserID_Get(long long int handle);
extern void OPQBot_AtMsg_UserID_Set(long long int handle, long long int val);
extern long long int OPQBot_AtMsg_Clean(long long int _handle);

// --- wrapping struct: OPQBot.GroupFileMsg ---
extern long long int OPQBot_GroupFileMsg_CTor();
extern char* OPQBot_GroupFileMsg_FileID_Get(long long int handle);
extern void OPQBot_GroupFileMsg_FileID_Set(long long int handle, char* val);
extern char* OPQBot_GroupFileMsg_FileName_Get(long long int handle);
extern void OPQBot_GroupFileMsg_FileName_Set(long long int handle, char* val);
extern long long int OPQBot_GroupFileMsg_FileSize_Get(long long int handle);
extern void OPQBot_GroupFileMsg_FileSize_Set(long long int handle, long long int val);
extern char* OPQBot_GroupFileMsg_Tips_Get(long long int handle);
extern void OPQBot_GroupFileMsg_Tips_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.UserCardInfo ---
extern long long int OPQBot_UserCardInfo_CTor();
extern long long int OPQBot_UserCardInfo_Age_Get(long long int handle);
extern void OPQBot_UserCardInfo_Age_Set(long long int handle, long long int val);
extern char* OPQBot_UserCardInfo_City_Get(long long int handle);
extern void OPQBot_UserCardInfo_City_Set(long long int handle, char* val);
extern long long int OPQBot_UserCardInfo_LikeNums_Get(long long int handle);
extern void OPQBot_UserCardInfo_LikeNums_Set(long long int handle, long long int val);
extern long long int OPQBot_UserCardInfo_LoginDays_Get(long long int handle);
extern void OPQBot_UserCardInfo_LoginDays_Set(long long int handle, long long int val);
extern char* OPQBot_UserCardInfo_NickName_Get(long long int handle);
extern void OPQBot_UserCardInfo_NickName_Set(long long int handle, char* val);
extern char* OPQBot_UserCardInfo_Province_Get(long long int handle);
extern void OPQBot_UserCardInfo_Province_Set(long long int handle, char* val);
extern long long int OPQBot_UserCardInfo_QQLevel_Get(long long int handle);
extern void OPQBot_UserCardInfo_QQLevel_Set(long long int handle, long long int val);
extern long long int OPQBot_UserCardInfo_QQUin_Get(long long int handle);
extern void OPQBot_UserCardInfo_QQUin_Set(long long int handle, long long int val);
extern long long int OPQBot_UserCardInfo_Sex_Get(long long int handle);
extern void OPQBot_UserCardInfo_Sex_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeVoiceByLocalContent ---
extern long long int OPQBot_SendTypeVoiceByLocalContent_CTor();
extern char* OPQBot_SendTypeVoiceByLocalContent_Path_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByLocalContent_Path_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.Result ---
extern long long int OPQBot_Result_CTor();
extern char* OPQBot_Result_Msg_Get(long long int handle);
extern void OPQBot_Result_Msg_Set(long long int handle, char* val);
extern long long int OPQBot_Result_Ret_Get(long long int handle);
extern void OPQBot_Result_Ret_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeForwordContent ---
extern long long int OPQBot_SendTypeForwordContent_CTor();
extern char* OPQBot_SendTypeForwordContent_ForwordBuf_Get(long long int handle);
extern void OPQBot_SendTypeForwordContent_ForwordBuf_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeForwordContent_ForwordField_Get(long long int handle);
extern void OPQBot_SendTypeForwordContent_ForwordField_Set(long long int handle, long long int val);
extern char* OPQBot_SendTypeForwordContent_Content_Get(long long int handle);
extern void OPQBot_SendTypeForwordContent_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.GroupAdminSysNotifyPack ---
extern long long int OPQBot_GroupAdminSysNotifyPack_CTor();

// --- wrapping struct: OPQBot.GroupExitPack ---
extern long long int OPQBot_GroupExitPack_CTor();

// --- wrapping struct: OPQBot.GroupList ---
extern long long int OPQBot_GroupList_CTor();
extern long long int OPQBot_GroupList_Count_Get(long long int handle);
extern void OPQBot_GroupList_Count_Set(long long int handle, long long int val);
extern char* OPQBot_GroupList_NextToken_Get(long long int handle);
extern void OPQBot_GroupList_NextToken_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.MyRecord ---
extern long long int OPQBot_MyRecord_CTor();
extern long long int OPQBot_MyRecord_FromGroupID_Get(long long int handle);
extern void OPQBot_MyRecord_FromGroupID_Set(long long int handle, long long int val);
extern long long int OPQBot_MyRecord_MsgRandom_Get(long long int handle);
extern void OPQBot_MyRecord_MsgRandom_Set(long long int handle, long long int val);
extern long long int OPQBot_MyRecord_MsgSeq_Get(long long int handle);
extern void OPQBot_MyRecord_MsgSeq_Set(long long int handle, long long int val);
extern long long int OPQBot_MyRecord_MsgTime_Get(long long int handle);
extern void OPQBot_MyRecord_MsgTime_Set(long long int handle, long long int val);
extern char* OPQBot_MyRecord_MsgType_Get(long long int handle);
extern void OPQBot_MyRecord_MsgType_Set(long long int handle, char* val);
extern char* OPQBot_MyRecord_Content_Get(long long int handle);
extern void OPQBot_MyRecord_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.Reply ---
extern long long int OPQBot_Reply_CTor();
extern char* OPQBot_Reply_Content_Get(long long int handle);
extern void OPQBot_Reply_Content_Set(long long int handle, char* val);
extern char* OPQBot_Reply_SrcContent_Get(long long int handle);
extern void OPQBot_Reply_SrcContent_Set(long long int handle, char* val);
extern long long int OPQBot_Reply_MsgSeq_Get(long long int handle);
extern void OPQBot_Reply_MsgSeq_Set(long long int handle, long long int val);
extern char* OPQBot_Reply_Tips_Get(long long int handle);
extern void OPQBot_Reply_Tips_Set(long long int handle, char* val);
extern long long int OPQBot_Reply_UserID_Get(long long int handle);
extern void OPQBot_Reply_UserID_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendMsgPack ---
extern long long int OPQBot_SendMsgPack_CTor();
extern long long int OPQBot_SendMsgPack_SendToType_Get(long long int handle);
extern void OPQBot_SendMsgPack_SendToType_Set(long long int handle, long long int val);
extern long long int OPQBot_SendMsgPack_ToUserUid_Get(long long int handle);
extern void OPQBot_SendMsgPack_ToUserUid_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.GroupExitSuccessPack ---
extern long long int OPQBot_GroupExitSuccessPack_CTor();

// --- wrapping struct: OPQBot.FriendMsgPack ---
extern long long int OPQBot_FriendMsgPack_CTor();
extern char* OPQBot_FriendMsgPack_Content_Get(long long int handle);
extern void OPQBot_FriendMsgPack_Content_Set(long long int handle, char* val);
extern long long int OPQBot_FriendMsgPack_FromUin_Get(long long int handle);
extern void OPQBot_FriendMsgPack_FromUin_Set(long long int handle, long long int val);
extern long long int OPQBot_FriendMsgPack_MsgSeq_Get(long long int handle);
extern void OPQBot_FriendMsgPack_MsgSeq_Set(long long int handle, long long int val);
extern char* OPQBot_FriendMsgPack_MsgType_Get(long long int handle);
extern void OPQBot_FriendMsgPack_MsgType_Set(long long int handle, char* val);
extern long long int OPQBot_FriendMsgPack_ToUin_Get(long long int handle);
extern void OPQBot_FriendMsgPack_ToUin_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeVoiceByUrlContentPrivateChat ---
extern long long int OPQBot_SendTypeVoiceByUrlContentPrivateChat_CTor();
extern char* OPQBot_SendTypeVoiceByUrlContentPrivateChat_VoiceUrl_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByUrlContentPrivateChat_VoiceUrl_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeVoiceByUrlContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByUrlContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeXmlContent ---
extern long long int OPQBot_SendTypeXmlContent_CTor();
extern char* OPQBot_SendTypeXmlContent_Content_Get(long long int handle);
extern void OPQBot_SendTypeXmlContent_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.SendTypeForwordContentPrivateChat ---
extern long long int OPQBot_SendTypeForwordContentPrivateChat_CTor();
extern char* OPQBot_SendTypeForwordContentPrivateChat_ForwordBuf_Get(long long int handle);
extern void OPQBot_SendTypeForwordContentPrivateChat_ForwordBuf_Set(long long int handle, char* val);
extern char* OPQBot_SendTypeForwordContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypeForwordContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeForwordContentPrivateChat_ForwordField_Get(long long int handle);
extern void OPQBot_SendTypeForwordContentPrivateChat_ForwordField_Set(long long int handle, long long int val);
extern long long int OPQBot_SendTypeForwordContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeForwordContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeVoiceByLocalContentPrivateChat ---
extern long long int OPQBot_SendTypeVoiceByLocalContentPrivateChat_CTor();
extern char* OPQBot_SendTypeVoiceByLocalContentPrivateChat_Path_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByLocalContentPrivateChat_Path_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeVoiceByLocalContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeVoiceByLocalContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypeJsonContent ---
extern long long int OPQBot_SendTypeJsonContent_CTor();
extern char* OPQBot_SendTypeJsonContent_Content_Get(long long int handle);
extern void OPQBot_SendTypeJsonContent_Content_Set(long long int handle, char* val);

// --- wrapping struct: OPQBot.SendTypePicMsgByLocalContentPrivateChat ---
extern long long int OPQBot_SendTypePicMsgByLocalContentPrivateChat_CTor();
extern char* OPQBot_SendTypePicMsgByLocalContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContentPrivateChat_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByLocalContentPrivateChat_Path_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContentPrivateChat_Path_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypePicMsgByLocalContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContentPrivateChat_Group_Set(long long int handle, long long int val);
extern char OPQBot_SendTypePicMsgByLocalContentPrivateChat_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByLocalContentPrivateChat_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypePicMsgByUrlContentPrivateChat ---
extern long long int OPQBot_SendTypePicMsgByUrlContentPrivateChat_CTor();
extern char* OPQBot_SendTypePicMsgByUrlContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContentPrivateChat_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByUrlContentPrivateChat_PicUrl_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContentPrivateChat_PicUrl_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypePicMsgByUrlContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContentPrivateChat_Group_Set(long long int handle, long long int val);
extern char OPQBot_SendTypePicMsgByUrlContentPrivateChat_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByUrlContentPrivateChat_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.SendTypeXmlContentPrivateChat ---
extern long long int OPQBot_SendTypeXmlContentPrivateChat_CTor();
extern char* OPQBot_SendTypeXmlContentPrivateChat_Content_Get(long long int handle);
extern void OPQBot_SendTypeXmlContentPrivateChat_Content_Set(long long int handle, char* val);
extern long long int OPQBot_SendTypeXmlContentPrivateChat_Group_Get(long long int handle);
extern void OPQBot_SendTypeXmlContentPrivateChat_Group_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.BotManager ---
extern long long int OPQBot_BotManager_CTor();
extern long long int OPQBot_BotManager_QQ_Get(long long int handle);
extern void OPQBot_BotManager_QQ_Set(long long int handle, long long int val);
extern char OPQBot_BotManager_Running_Get(long long int handle);
extern void OPQBot_BotManager_Running_Set(long long int handle, char val);
extern char* OPQBot_BotManager_OPQUrl_Get(long long int handle);
extern void OPQBot_BotManager_OPQUrl_Set(long long int handle, char* val);
extern long long int OPQBot_BotManager_MaxRetryCount_Get(long long int handle);
extern void OPQBot_BotManager_MaxRetryCount_Set(long long int handle, long long int val);
extern long long int OPQBot_BotManager_Session_Get(long long int handle);
extern void OPQBot_BotManager_Session_Set(long long int handle, long long int val);
extern void OPQBot_BotManager_SetMaxRetryCount(long long int _handle, long long int maxRetryCount, char goRun);
extern void OPQBot_BotManager_Wait(long long int _handle, char goRun);
extern void OPQBot_BotManager_SetSendDelayed(long long int _handle, long long int Millisecond, char goRun);
extern char* OPQBot_BotManager_Start(long long int _handle);
extern void OPQBot_BotManager_Send(long long int _handle, long long int sendMsgPack, char goRun);
extern void OPQBot_BotManager_Stop(long long int _handle, char goRun);
extern char* OPQBot_BotManager_ReCallMsg(long long int _handle, long long int GroupID, long long int MsgRandom, long long int MsgSeq);
extern char* OPQBot_BotManager_RefreshKey(long long int _handle);
extern char* OPQBot_BotManager_Announce(long long int _handle, char* title, char* text, long long int pinned, long long int announceType, long long int groupID);
extern char* OPQBot_BotManager_UploadFileWithBase64(long long int _handle, char* FileName, char* FileBase64, long long int ToUserUid, char Notify);
extern char* OPQBot_BotManager_UploadFileWithFileUrl(long long int _handle, char* FileName, char* FileUrl, long long int ToUserUid, char Notify);
extern char* OPQBot_BotManager_UploadFileWithFilePath(long long int _handle, char* FilePath, long long int ToUserUid, char Notify);
extern char* OPQBot_BotManager_Chuo(long long int _handle, long long int sendType, long long int groupID, long long int userId);
extern char* OPQBot_BotManager_SetAdmin(long long int _handle, long long int flag, long long int groupID, long long int userId);
extern long long int OPQBot_BotManager_GetUserInfo(long long int _handle, long long int qq);
extern long long int OPQBot_BotManager_GetUserCookie(long long int _handle);
extern char* OPQBot_BotManager_KickGroupMember(long long int _handle, long long int groupID, long long int userId);
extern long long int OPQBot_BotManager_GetGroupMemberList(long long int _handle, long long int groupID, long long int LastUin);
extern char* OPQBot_BotManager_SetGroupNewNick(long long int _handle, char* newNick, long long int groupID, long long int userId);
extern char* OPQBot_BotManager_SetGroupUniqueTitle(long long int _handle, char* newNick, long long int groupID, long long int userId);
extern long long int OPQBot_BotManager_GetFriendList(long long int _handle, long long int startIndex);
extern long long int OPQBot_BotManager_GetGroupList(long long int _handle, char* nextToken);
extern char* OPQBot_BotManager_SetForbidden(long long int _handle, long long int flag, long long int ShutTime, long long int groupID, long long int userId);
extern long long int OPQBot_BotManager_GetUserCardInfo(long long int _handle, long long int qq);
extern char* OPQBot_BotManager_OldSendVoice(long long int _handle, long long int userID, long long int sendToType, char* data);
extern long long int OPQBot_BotManager_Zan(long long int _handle, long long int qq, long long int num);
extern long long int OPQBot_BotManager_CallFunc(long long int _handle, char* FuncName, char* funcStruct);
extern void OPQBot_BotManager_SendFriendTextMsg(long long int _handle, long long int FriendUin, char* Content, char goRun);
extern void OPQBot_BotManager_SendFriendPicMsg(long long int _handle, long long int FriendUin, char* Content, long long int Pic, char goRun);
extern void OPQBot_BotManager_SendGroupTextMsg(long long int _handle, long long int GroupUin, char* Content, char goRun);
extern void OPQBot_BotManager_SendGroupPicMsg(long long int _handle, long long int GroupUin, char* Content, long long int Pic, char goRun);
extern void OPQBot_BotManager_SendGroupJsonMsg(long long int _handle, long long int GroupUin, char* Content, char goRun);
extern void OPQBot_BotManager_SendGroupXmlMsg(long long int _handle, long long int GroupUin, char* Content, char goRun);

// --- wrapping struct: OPQBot.FriendList ---
extern long long int OPQBot_FriendList_CTor();
extern long long int OPQBot_FriendList_FriendCount_Get(long long int handle);
extern void OPQBot_FriendList_FriendCount_Set(long long int handle, long long int val);
extern long long int OPQBot_FriendList_GetfriendCount_Get(long long int handle);
extern void OPQBot_FriendList_GetfriendCount_Set(long long int handle, long long int val);
extern long long int OPQBot_FriendList_StartIndex_Get(long long int handle);
extern void OPQBot_FriendList_StartIndex_Set(long long int handle, long long int val);
extern long long int OPQBot_FriendList_TotoalFriendCount_Get(long long int handle);
extern void OPQBot_FriendList_TotoalFriendCount_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.GroupRevokePack ---
extern long long int OPQBot_GroupRevokePack_CTor();

// --- wrapping struct: OPQBot.GroupSystemNotifyPack ---
extern long long int OPQBot_GroupSystemNotifyPack_CTor();

// --- wrapping struct: OPQBot.PicMsg ---
extern long long int OPQBot_PicMsg_CTor();
extern char* OPQBot_PicMsg_Content_Get(long long int handle);
extern void OPQBot_PicMsg_Content_Set(long long int handle, char* val);
extern char* OPQBot_PicMsg_Tips_Get(long long int handle);
extern void OPQBot_PicMsg_Tips_Set(long long int handle, char* val);
extern long long int OPQBot_PicMsg_UserID_Get(long long int handle);
extern void OPQBot_PicMsg_UserID_Set(long long int handle, long long int val);

// --- wrapping struct: OPQBot.SendTypePicMsgByBase64Content ---
extern long long int OPQBot_SendTypePicMsgByBase64Content_CTor();
extern char* OPQBot_SendTypePicMsgByBase64Content_Content_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64Content_Content_Set(long long int handle, char* val);
extern char* OPQBot_SendTypePicMsgByBase64Content_Base64_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64Content_Base64_Set(long long int handle, char* val);
extern char OPQBot_SendTypePicMsgByBase64Content_Flash_Get(long long int handle);
extern void OPQBot_SendTypePicMsgByBase64Content_Flash_Set(long long int handle, char val);

// --- wrapping struct: OPQBot.GroupAdminPack ---
extern long long int OPQBot_GroupAdminPack_CTor();

// --- wrapping struct: OPQBot.GroupMsgPack ---
extern long long int OPQBot_GroupMsgPack_CTor();
extern char* OPQBot_GroupMsgPack_Content_Get(long long int handle);
extern void OPQBot_GroupMsgPack_Content_Set(long long int handle, char* val);
extern long long int OPQBot_GroupMsgPack_FromGroupID_Get(long long int handle);
extern void OPQBot_GroupMsgPack_FromGroupID_Set(long long int handle, long long int val);
extern char* OPQBot_GroupMsgPack_FromGroupName_Get(long long int handle);
extern void OPQBot_GroupMsgPack_FromGroupName_Set(long long int handle, char* val);
extern char* OPQBot_GroupMsgPack_FromNickName_Get(long long int handle);
extern void OPQBot_GroupMsgPack_FromNickName_Set(long long int handle, char* val);
extern long long int OPQBot_GroupMsgPack_FromUserID_Get(long long int handle);
extern void OPQBot_GroupMsgPack_FromUserID_Set(long long int handle, long long int val);
extern long long int OPQBot_GroupMsgPack_MsgRandom_Get(long long int handle);
extern void OPQBot_GroupMsgPack_MsgRandom_Set(long long int handle, long long int val);
extern long long int OPQBot_GroupMsgPack_MsgSeq_Get(long long int handle);
extern void OPQBot_GroupMsgPack_MsgSeq_Set(long long int handle, long long int val);
extern long long int OPQBot_GroupMsgPack_MsgTime_Get(long long int handle);
extern void OPQBot_GroupMsgPack_MsgTime_Set(long long int handle, long long int val);
extern char* OPQBot_GroupMsgPack_MsgType_Get(long long int handle);
extern void OPQBot_GroupMsgPack_MsgType_Set(long long int handle, char* val);
extern long long int OPQBot_ParserVideoMsg(long long int pack);
extern long long int OPQBot_ParserGroupAtMsg(long long int pack);
extern long long int OPQBot_ParserGroupFileMsg(long long int pack);
extern long long int OPQBot_ParserGroupReplyMsg(long long int pack);
extern long long int OPQBot_NewBotManager(long long int QQ, char* OPQUrl);
extern long long int OPQBot_ParserGroupPicMsg(long long int pack);
extern char* OPQBot_MacroAt(long long int qqs);
extern char* OPQBot_MacroId();
extern long long int OPQBot_VoiceSilkToMp3(char* base64EncodedSilk);
extern char* OPQBot_MacroAtAll();
extern void OPQBot_SetLog(long long int l, char goRun);
extern char* OPQBot_VoiceMp3ToSilk(char* mp3Path);
extern char* OPQBot_DecodeFaceFromSentences(char* encode, char* format);
extern char* OPQBot_DecodeFace(char* encodeFace);

// --- wrapping struct: qzone.Manager ---
extern long long int qzone_Manager_CTor();
extern char* qzone_Manager_QQ_Get(long long int handle);
extern void qzone_Manager_QQ_Set(long long int handle, char* val);
extern char* qzone_Manager_Gtk_Get(long long int handle);
extern void qzone_Manager_Gtk_Set(long long int handle, char* val);
extern char* qzone_Manager_Gtk2_Get(long long int handle);
extern void qzone_Manager_Gtk2_Set(long long int handle, char* val);
extern char* qzone_Manager_PSkey_Get(long long int handle);
extern void qzone_Manager_PSkey_Set(long long int handle, char* val);
extern char* qzone_Manager_Skey_Get(long long int handle);
extern void qzone_Manager_Skey_Set(long long int handle, char* val);
extern char* qzone_Manager_Uin_Get(long long int handle);
extern void qzone_Manager_Uin_Set(long long int handle, char* val);
extern char* qzone_Manager_GetQzoneToken(long long int _handle);
extern char* qzone_Manager_RefreshToken(long long int _handle);
extern long long int qzone_Manager_GetShuoShuoList(long long int _handle);
extern long long int qzone_Manager_SendShuoShuo(long long int _handle, char* Content);
extern long long int qzone_Manager_UploadPic(long long int _handle, char* picBase64);
extern long long int qzone_Manager_SendShuoShuoWithBase64Pic(long long int _handle, char* Content, long long int pics);
extern long long int qzone_Manager_SendShuoShuoWithLocalPic(long long int _handle, char* content, long long int pics);
extern char* qzone_Manager_Like(long long int _handle, char* unikey, char* curkey, char* appid);

// --- wrapping struct: qzone.SendShuoShuoResult ---
extern long long int qzone_SendShuoShuoResult_CTor();
extern char* qzone_SendShuoShuoResult_Attach_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Attach_Set(long long int handle, char* val);
extern long long int qzone_SendShuoShuoResult_Code_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Code_Set(long long int handle, long long int val);
extern char* qzone_SendShuoShuoResult_Feedinfo_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Feedinfo_Set(long long int handle, char* val);
extern char* qzone_SendShuoShuoResult_Message_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Message_Set(long long int handle, char* val);
extern long long int qzone_SendShuoShuoResult_Needverify_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Needverify_Set(long long int handle, long long int val);
extern long long int qzone_SendShuoShuoResult_Now_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Now_Set(long long int handle, long long int val);
extern long long int qzone_SendShuoShuoResult_Republish_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Republish_Set(long long int handle, long long int val);
extern long long int qzone_SendShuoShuoResult_Secret_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Secret_Set(long long int handle, long long int val);
extern long long int qzone_SendShuoShuoResult_Subcode_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Subcode_Set(long long int handle, long long int val);
extern char* qzone_SendShuoShuoResult_Tid_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Tid_Set(long long int handle, char* val);
extern char* qzone_SendShuoShuoResult_Vote_Get(long long int handle);
extern void qzone_SendShuoShuoResult_Vote_Set(long long int handle, char* val);

// --- wrapping struct: qzone.ShuoshuoList ---
extern long long int qzone_ShuoshuoList_CTor();
extern long long int qzone_ShuoshuoList_Code_Get(long long int handle);
extern void qzone_ShuoshuoList_Code_Set(long long int handle, long long int val);
extern long long int qzone_ShuoshuoList_Subcode_Get(long long int handle);
extern void qzone_ShuoshuoList_Subcode_Set(long long int handle, long long int val);
extern char* qzone_ShuoshuoList_Message_Get(long long int handle);
extern void qzone_ShuoshuoList_Message_Set(long long int handle, char* val);
extern long long int qzone_ShuoshuoList_Default_Get(long long int handle);
extern void qzone_ShuoshuoList_Default_Set(long long int handle, long long int val);

// --- wrapping struct: qzone.UploadPicResult ---
extern long long int qzone_UploadPicResult_CTor();
extern long long int qzone_UploadPicResult_Ret_Get(long long int handle);
extern void qzone_UploadPicResult_Ret_Set(long long int handle, long long int val);
extern long long int qzone_NewQzoneManager(long long int qq, long long int cookie);
extern char* qzone_GenderGTK(char* sKey);
extern char* qzone_GetBase64(char* path);

#ifdef __cplusplus
}
#endif
