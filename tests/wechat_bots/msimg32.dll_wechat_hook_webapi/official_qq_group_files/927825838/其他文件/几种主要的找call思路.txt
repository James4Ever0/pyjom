1.特征码搜索call
  版本一致时直接特征码搜索call
  版本不一致时，通过分析旧版微信特征码猜测新版本微信特征码call
  
2.通过分析别人的dll或exe找call
  通过Hook Read/WriteMemoryProcess 偷取Hook功能
  通过Hook CreateRemoteThread 偷取call功能
  通过搜索pushad popad ret关键字定位call
  通过Ida F5分析别人的dll/exe函数执行流程找call
  
3.通过ce的ultimap缩小目标call范围

4.通过重新编译已开源的函数来对比目标程序aob差异找call

5.常规方式通过ce搜索结果配合x64dbg找call
  何时使用谁读取了找call
  何时使用谁写入了找call
  
6.通过分析微信日志找call
7.通过已知系统函数定位call
  CreateFileA找call
  
8.通过已知的结构体信息CE搜索内存定位call
  例：
  通过网上教程已经知道数据库密钥在内存中存放为一个结构体
  00000010  XXXXX       //指向密钥地址
  00000014  XXXXX 20    //密钥长度
  ....

  根据这个特征搜索内存

	00000010   这第一个 搜索字节集可写内存  
	判断是否为文本内容 如果非文本  
	就当前地址+偏移 20 从这个地址开始 
	每次地址+4(直到+80为止) 读取10字节内容 判断是否为 wxid_
	如果找到此内容 
	判断 00000014是否为整数20
	如果是  就输出当前内存地址 说明找到
	



9.通过微信每次必然调用的函数定位call
  通过ida+x64dbg 函数执行前后寄存器参数差别来判断函数作用是否为初始化信息体结构体
  下断初始化结构体缓冲区的call，微信上操作你要的功能，如发送图片，断下后下面就必然有目标功能call