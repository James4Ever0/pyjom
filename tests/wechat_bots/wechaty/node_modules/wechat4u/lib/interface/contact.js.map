{"version":3,"sources":["../../src/interface/contact.js"],"names":["getUserByUserName","isRoomContact","isSpContact","isPublicContact","ContactFactory","CONF","memberList","UserName","length","find","contact","getDisplayName","MemberCount","RemarkName","DisplayName","NickName","MemberList","test","SPECIALUSERS","indexOf","VerifyFlag","MM_USERATTRVERIFYFALG_BIZ_BRAND","contactProto","init","instance","OriginalNickName","OrignalNickName","OriginalRemarkName","OrignalRemarkName","OriginalDisplayName","OrignalDisplayName","isSelf","user","canSearch","keyword","toUpperCase","isSatisfy","key","RemarkPYQuanPin","PYQuanPin","Alias","KeyWord","extend","contactObj","Object","setPrototypeOf","contacts","getSearchUser","users","push"],"mappings":"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","file":"contact.js","sourcesContent":["import {\n  convertEmoji,\n  getCONF\n} from '../util'\nconst CONF = getCONF()\n\n/* Contact Object Example\n{\n  \"Uin\": 0,\n  \"UserName\": \"\",\n  \"NickName\": \"\",\n  \"HeadImgUrl\": \"\",\n  \"ContactFlag\": 3,\n  \"MemberCount\": 0,\n  \"MemberList\": [],\n  \"RemarkName\": \"\",\n  \"HideInputBarFlag\": 0,\n  \"Sex\": 0,\n  \"Signature\": \"\",\n  \"VerifyFlag\": 8,\n  \"OwnerUin\": 0,\n  \"PYInitial\": \"\",\n  \"PYQuanPin\": \"\",\n  \"RemarkPYInitial\": \"\",\n  \"RemarkPYQuanPin\": \"\",\n  \"StarFriend\": 0,\n  \"AppAccountFlag\": 0,\n  \"Statues\": 0,\n  \"AttrStatus\": 0,\n  \"Province\": \"\",\n  \"City\": \"\",\n  \"Alias\": \"Urinxs\",\n  \"SnsFlag\": 0,\n  \"UniFriend\": 0,\n  \"DisplayName\": \"\",\n  \"ChatRoomId\": 0,\n  \"KeyWord\": \"gh_\",\n  \"EncryChatRoomId\": \"\"\n}\n*/\nexport function getUserByUserName (memberList, UserName) {\n  if (!memberList.length) return null\n\n  return memberList.find(contact => contact.UserName === UserName)\n}\n\nexport function getDisplayName (contact) {\n  if (isRoomContact(contact)) {\n    if (contact.MemberCount >= 2) {\n      return '[群] ' + (contact.RemarkName || contact.DisplayName || contact.NickName ||\n      `${getDisplayName(contact.MemberList[0])}、${getDisplayName(contact.MemberList[1])}`)\n    } else {\n      return '[群] ' + (contact.RemarkName || contact.DisplayName || contact.NickName ||\n        `${getDisplayName(contact.MemberList[0])}`)\n    }\n  } else {\n    return contact.DisplayName || contact.RemarkName || contact.NickName || contact.UserName\n  }\n}\n\nexport function isRoomContact (contact) {\n  return contact.UserName ? /^@@|@chatroom$/.test(contact.UserName) : false\n}\n\nexport function isSpContact (contact) {\n  return CONF.SPECIALUSERS.indexOf(contact.UserName) >= 0\n}\n\nexport function isPublicContact (contact) {\n  return contact.VerifyFlag & CONF.MM_USERATTRVERIFYFALG_BIZ_BRAND\n}\n\nconst contactProto = {\n  init: function (instance) {\n    // 纠正错误以后保持兼容\n    this.OriginalNickName = this.OrignalNickName = this.NickName\n    this.OriginalRemarkName = this.OrignalRemarkName = this.RemarkName\n    this.OriginalDisplayName = this.OrignalDisplayName = this.DisplayName\n    this.NickName = convertEmoji(this.NickName)\n    this.RemarkName = convertEmoji(this.RemarkName)\n    this.DisplayName = convertEmoji(this.DisplayName)\n    this.isSelf = this.UserName === instance.user.UserName\n\n    return this\n  },\n  getDisplayName: function () {\n    return getDisplayName(this)\n  },\n  canSearch: function (keyword) {\n    if (!keyword) return false\n    keyword = keyword.toUpperCase()\n\n    let isSatisfy = key => (key || '').toUpperCase().indexOf(keyword) >= 0\n    return (\n      isSatisfy(this.RemarkName) ||\n      isSatisfy(this.RemarkPYQuanPin) ||\n      isSatisfy(this.NickName) ||\n      isSatisfy(this.PYQuanPin) ||\n      isSatisfy(this.Alias) ||\n      isSatisfy(this.KeyWord)\n    )\n  }\n}\n\nexport default function ContactFactory (instance) {\n  return {\n    extend: function (contactObj) {\n      contactObj = Object.setPrototypeOf(contactObj, contactProto)\n      return contactObj.init(instance)\n    },\n    getUserByUserName: function (UserName) {\n      return instance.contacts[UserName]\n    },\n    getSearchUser: function (keyword) {\n      let users = []\n      for (let key in instance.contacts) {\n        if (instance.contacts[key].canSearch(keyword)) {\n          users.push(instance.contacts[key])\n        }\n      }\n      return users\n    },\n    isSelf: function (contact) {\n      return contact.isSelf || contact.UserName === instance.user.UserName\n    },\n    getDisplayName,\n    isRoomContact,\n    isPublicContact,\n    isSpContact\n  }\n}\n"]}