{"version":3,"sources":["Ix.ts"],"names":[],"mappings":";;;AAAA,6CAA0C;AAajC,2FAbA,uBAAU,OAaA;AAZnB,yDAAsD;AAYjC,0FAZZ,qBAAS,OAYY;AAX9B,oDAAiD;AAWJ,yFAXpC,qBAAS,OAWmC;AAVrD,yCAAwC;AASjB,iGATd,qBAAU,OASoB;AARvC,mEAAgE;AASS,8FAThE,+BAAc,OAS+D;AANtF,wDAAmF;AAA1E,0GAAA,gBAAgB,OAAmB;AAC5C,wDAA2F;AAAlF,8GAAA,oBAAoB,OAAuB;AACpD,6DAAkG;AAAzF,+GAAA,qBAAqB,OAAwB;AACtD,6DAA0G;AAAjG,mHAAA,yBAAyB,OAA4B;AAK9D,oFAAoF;AACpF,kBAAe;IACb,UAAU,EAAV,uBAAU;IACV,SAAS,EAAT,qBAAS;IACT,QAAQ,EAAE,qBAAS;IACnB,aAAa,EAAE,+BAAc;IAC7B,kBAAkB;IAClB,kBAAkB,EAAE,qBAAU;CAC/B,CAAC","file":"Ix.js","sourcesContent":["import { AbortError } from './aborterror';\nimport { AsyncSink } from './asynciterable/asyncsink';\nimport { IterableX } from './iterable/iterablex';\nimport { observable } from './observer';\nimport { AsyncIterableX } from './asynciterable/asynciterablex';\nimport { GroupedIterable as ImportedGroupedIterable } from './iterable/operators/groupby';\nimport { GroupedAsyncIterable as ImportedGroupedAsyncIterable } from './asynciterable/operators/groupby';\nexport { OrderedIterableX as OrderedIterable } from './iterable/operators/orderby';\nexport { OrderedIterableBaseX as OrderedIterableBase } from './iterable/operators/orderby';\nexport { OrderedAsyncIterableX as OrderedAsyncIterable } from './asynciterable/operators/orderby';\nexport { OrderedAsyncIterableBaseX as OrderedAsyncIterableBase } from './asynciterable/operators/orderby';\n\nexport { observable as symbolObservable };\nexport { AbortError, AsyncSink, IterableX as Iterable, AsyncIterableX as AsyncIterable };\n\n// Also export default to accommodate quirks of node's `--experimental-modules` mode\nexport default {\n  AbortError,\n  AsyncSink,\n  Iterable: IterableX,\n  AsyncIterable: AsyncIterableX,\n  // prettier-ignore\n  'symbolObservable': observable\n};\n\nexport type GroupedIterable<TKey, TValue> = ImportedGroupedIterable<TKey, TValue>;\nexport type GroupedAsyncIterable<TKey, TValue> = ImportedGroupedAsyncIterable<TKey, TValue>;\n\ndeclare global {\n  interface AsyncIterable<T> {\n    [Symbol.asyncIterator](signal?: AbortSignal): AsyncIterator<T>;\n  }\n  interface AsyncIterableIterator<T> extends AsyncIterator<T> {\n    [Symbol.asyncIterator](signal?: AbortSignal): AsyncIterableIterator<T>;\n  }\n}\n"]}