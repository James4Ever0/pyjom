{"version":3,"sources":["iterable/operators/concatall.ts"],"names":[],"mappings":";;;AACA,sCAA2C;AAG3C;;;;;;GAMG;AACH,SAAgB,SAAS;IACvB,OAAO,SAAS,yBAAyB,CAAC,MAA6B;QACrE,OAAO,IAAI,uBAAc,CAAI,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;AACJ,CAAC;AAJD,8BAIC","file":"concatall.js","sourcesContent":["import { IterableX } from '../iterablex';\nimport { ConcatIterable } from '../concat';\nimport { OperatorFunction } from '../../interfaces';\n\n/**\n * Concatenates all inner iterable sequences, as long as the previous\n * iterable sequence terminated successfully.\n *\n * @template T The type of elements in the source sequence.\n * @returns {OperatorFunction<Iterable<T>, T>} An operator which concatenates all inner iterable sources.\n */\nexport function concatAll<T>(): OperatorFunction<Iterable<T>, T> {\n  return function concatAllOperatorFunction(source: Iterable<Iterable<T>>): IterableX<T> {\n    return new ConcatIterable<T>(source);\n  };\n}\n"]}