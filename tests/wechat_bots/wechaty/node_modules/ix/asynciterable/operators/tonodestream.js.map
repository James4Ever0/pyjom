{"version":3,"sources":["asynciterable/operators/tonodestream.ts"],"names":[],"mappings":";;;AACA,kDAAwD;AAaxD,SAAgB,YAAY,CAC1B,OAAyB;IAEzB,OAAO,SAAS,4BAA4B,CAC1C,MAA0B;QAE1B,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,KAAK,IAAI;YAC5C,CAAC,CAAC,IAAI,oCAAqB,CAAU,MAAM,EAAE,OAAO,CAAC;YACrD,CAAC,CAAC,IAAI,oCAAqB,CAA6C,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7F,CAAC,CAAC;AACJ,CAAC;AAVD,oCAUC","file":"tonodestream.js","sourcesContent":["import { ReadableOptions } from 'stream';\nimport { AsyncIterableReadable } from '../tonodestream';\nimport { BufferLike, UnaryFunction } from '../../interfaces';\n\nexport function toNodeStream<TSource>(): UnaryFunction<\nAsyncIterable<TSource>,\nAsyncIterableReadable<TSource>\n>;\nexport function toNodeStream<TSource>(\n  options: ReadableOptions & { objectMode: true }\n): UnaryFunction<AsyncIterable<TSource>, AsyncIterableReadable<TSource>>;\nexport function toNodeStream<TSource extends BufferLike>(\n  options: ReadableOptions & { objectMode: false }\n): UnaryFunction<AsyncIterable<TSource>, AsyncIterableReadable<TSource>>;\nexport function toNodeStream<TSource>(\n  options?: ReadableOptions\n): UnaryFunction<AsyncIterable<TSource>, AsyncIterableReadable<TSource>> {\n  return function toNodeStreamOperatorFunction(\n    source: AsyncIterable<any>\n  ): AsyncIterableReadable<TSource> {\n    return !options || options.objectMode === true\n      ? new AsyncIterableReadable<TSource>(source, options)\n      : new AsyncIterableReadable<TSource extends BufferLike ? TSource : any>(source, options);\n  };\n}\n"]}