{"version":3,"sources":["add/iterable-operators/scan.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAY7D,MAAM,UAAU,SAAS,CAEvB,oBAA4F,EAC5F,IAAQ;IAER,OAAO,IAAI,YAAY,CACrB,IAAI;IACJ,6CAA6C;IAC7C,OAAO,oBAAoB,KAAK,UAAU;QACxC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;YACpB,CAAC,CAAC,kBAAkB;gBAClB,EAAE,UAAU,EAAE,oBAAoB,EAAE,MAAM,EAAE,IAAI,EAAE;YACpD,CAAC,CAAC,kBAAkB;gBAClB,EAAE,UAAU,EAAE,oBAAoB,EAAE;QACxC,CAAC,CAAC,oBAAoB,CACzB,CAAC;AACJ,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC","file":"scan.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { ScanIterable } from '../../iterable/operators/scan';\nimport { ScanOptions } from '../../iterable/operators/scanoptions';\n\n/**\n * @ignore\n */\nexport function scanProto<T, R = T>(this: IterableX<T>, options: ScanOptions<T, R>): IterableX<R>;\nexport function scanProto<T, R = T>(\n  this: IterableX<T>,\n  accumulator: (accumulator: R, current: T, index: number) => R,\n  seed?: R\n): IterableX<R>;\nexport function scanProto<T, R = T>(\n  this: IterableX<T>,\n  optionsOrAccumulator: ScanOptions<T, R> | ((accumulator: R, current: T, index: number) => R),\n  seed?: R\n): IterableX<R> {\n  return new ScanIterable(\n    this,\n    // eslint-disable-next-line no-nested-ternary\n    typeof optionsOrAccumulator === 'function'\n      ? arguments.length > 1\n        ? // prettier-ignore\n          { 'callback': optionsOrAccumulator, 'seed': seed }\n        : // prettier-ignore\n          { 'callback': optionsOrAccumulator }\n      : optionsOrAccumulator\n  );\n}\n\nIterableX.prototype.scan = scanProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    scan: typeof scanProto;\n  }\n}\n"]}