{"version":3,"sources":["add/iterable-operators/except.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AAEzD;;GAEG;AACH,MAAM,UAAU,WAAW,CAEzB,MAAmB,EACnB,QAAkC;IAElC,OAAO,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"except.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { except } from '../../iterable/operators/except';\n\n/**\n * @ignore\n */\nexport function exceptProto<T>(\n  this: IterableX<T>,\n  second: Iterable<T>,\n  comparer?: (x: T, y: T) => boolean\n): IterableX<T> {\n  return except(second, comparer)(this);\n}\n\nIterableX.prototype.except = exceptProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    except: typeof exceptProto;\n  }\n}\n"]}