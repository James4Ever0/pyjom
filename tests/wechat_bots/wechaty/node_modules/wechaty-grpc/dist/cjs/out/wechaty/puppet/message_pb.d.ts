// package: wechaty.puppet
// file: wechaty/puppet/message.proto

import * as jspb from "google-protobuf";
import * as google_protobuf_timestamp_pb from "google-protobuf/google/protobuf/timestamp_pb";
import * as google_protobuf_wrappers_pb from "google-protobuf/google/protobuf/wrappers_pb";
import * as wechaty_puppet_image_pb from "../../wechaty/puppet/image_pb";
import * as wechaty_puppet_location_pb from "../../wechaty/puppet/location_pb";
import * as wechaty_puppet_mini_program_pb from "../../wechaty/puppet/mini-program_pb";
import * as wechaty_puppet_url_link_pb from "../../wechaty/puppet/url-link_pb";

export class MessagePayloadRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessagePayloadRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessagePayloadRequest): MessagePayloadRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessagePayloadRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessagePayloadRequest;
  static deserializeBinaryFromReader(message: MessagePayloadRequest, reader: jspb.BinaryReader): MessagePayloadRequest;
}

export namespace MessagePayloadRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessagePayloadResponse extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getFilename(): string;
  setFilename(value: string): void;

  getText(): string;
  setText(value: string): void;

  getTimestampDeprecated(): number;
  setTimestampDeprecated(value: number): void;

  getType(): MessageTypeMap[keyof MessageTypeMap];
  setType(value: MessageTypeMap[keyof MessageTypeMap]): void;

  getTalkerId(): string;
  setTalkerId(value: string): void;

  getRoomId(): string;
  setRoomId(value: string): void;

  getListenerId(): string;
  setListenerId(value: string): void;

  clearMentionIdsList(): void;
  getMentionIdsList(): Array<string>;
  setMentionIdsList(value: Array<string>): void;
  addMentionIds(value: string, index?: number): string;

  hasReceiveTime(): boolean;
  clearReceiveTime(): void;
  getReceiveTime(): google_protobuf_timestamp_pb.Timestamp | undefined;
  setReceiveTime(value?: google_protobuf_timestamp_pb.Timestamp): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessagePayloadResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessagePayloadResponse): MessagePayloadResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessagePayloadResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessagePayloadResponse;
  static deserializeBinaryFromReader(message: MessagePayloadResponse, reader: jspb.BinaryReader): MessagePayloadResponse;
}

export namespace MessagePayloadResponse {
  export type AsObject = {
    id: string,
    filename: string,
    text: string,
    timestampDeprecated: number,
    type: MessageTypeMap[keyof MessageTypeMap],
    talkerId: string,
    roomId: string,
    listenerId: string,
    mentionIdsList: Array<string>,
    receiveTime?: google_protobuf_timestamp_pb.Timestamp.AsObject,
  }
}

export class MessageImageRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getType(): wechaty_puppet_image_pb.ImageTypeMap[keyof wechaty_puppet_image_pb.ImageTypeMap];
  setType(value: wechaty_puppet_image_pb.ImageTypeMap[keyof wechaty_puppet_image_pb.ImageTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageImageRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageImageRequest): MessageImageRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageImageRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageImageRequest;
  static deserializeBinaryFromReader(message: MessageImageRequest, reader: jspb.BinaryReader): MessageImageRequest;
}

export namespace MessageImageRequest {
  export type AsObject = {
    id: string,
    type: wechaty_puppet_image_pb.ImageTypeMap[keyof wechaty_puppet_image_pb.ImageTypeMap],
  }
}

export class MessageImageResponse extends jspb.Message {
  getFileBox(): string;
  setFileBox(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageImageResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageImageResponse): MessageImageResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageImageResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageImageResponse;
  static deserializeBinaryFromReader(message: MessageImageResponse, reader: jspb.BinaryReader): MessageImageResponse;
}

export namespace MessageImageResponse {
  export type AsObject = {
    fileBox: string,
  }
}

export class MessageContactRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageContactRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageContactRequest): MessageContactRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageContactRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageContactRequest;
  static deserializeBinaryFromReader(message: MessageContactRequest, reader: jspb.BinaryReader): MessageContactRequest;
}

export namespace MessageContactRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageContactResponse extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageContactResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageContactResponse): MessageContactResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageContactResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageContactResponse;
  static deserializeBinaryFromReader(message: MessageContactResponse, reader: jspb.BinaryReader): MessageContactResponse;
}

export namespace MessageContactResponse {
  export type AsObject = {
    id: string,
  }
}

export class MessageFileRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageFileRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageFileRequest): MessageFileRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageFileRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageFileRequest;
  static deserializeBinaryFromReader(message: MessageFileRequest, reader: jspb.BinaryReader): MessageFileRequest;
}

export namespace MessageFileRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageFileResponse extends jspb.Message {
  getFileBox(): string;
  setFileBox(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageFileResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageFileResponse): MessageFileResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageFileResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageFileResponse;
  static deserializeBinaryFromReader(message: MessageFileResponse, reader: jspb.BinaryReader): MessageFileResponse;
}

export namespace MessageFileResponse {
  export type AsObject = {
    fileBox: string,
  }
}

export class MessageMiniProgramRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageMiniProgramRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageMiniProgramRequest): MessageMiniProgramRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageMiniProgramRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageMiniProgramRequest;
  static deserializeBinaryFromReader(message: MessageMiniProgramRequest, reader: jspb.BinaryReader): MessageMiniProgramRequest;
}

export namespace MessageMiniProgramRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageMiniProgramResponse extends jspb.Message {
  getMiniProgramDeprecated(): string;
  setMiniProgramDeprecated(value: string): void;

  hasMiniProgram(): boolean;
  clearMiniProgram(): void;
  getMiniProgram(): wechaty_puppet_mini_program_pb.MiniProgramPayload | undefined;
  setMiniProgram(value?: wechaty_puppet_mini_program_pb.MiniProgramPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageMiniProgramResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageMiniProgramResponse): MessageMiniProgramResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageMiniProgramResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageMiniProgramResponse;
  static deserializeBinaryFromReader(message: MessageMiniProgramResponse, reader: jspb.BinaryReader): MessageMiniProgramResponse;
}

export namespace MessageMiniProgramResponse {
  export type AsObject = {
    miniProgramDeprecated: string,
    miniProgram?: wechaty_puppet_mini_program_pb.MiniProgramPayload.AsObject,
  }
}

export class MessageUrlRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageUrlRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageUrlRequest): MessageUrlRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageUrlRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageUrlRequest;
  static deserializeBinaryFromReader(message: MessageUrlRequest, reader: jspb.BinaryReader): MessageUrlRequest;
}

export namespace MessageUrlRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageUrlResponse extends jspb.Message {
  getUrlLinkDeprecated(): string;
  setUrlLinkDeprecated(value: string): void;

  hasUrlLink(): boolean;
  clearUrlLink(): void;
  getUrlLink(): wechaty_puppet_url_link_pb.UrlLinkPayload | undefined;
  setUrlLink(value?: wechaty_puppet_url_link_pb.UrlLinkPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageUrlResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageUrlResponse): MessageUrlResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageUrlResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageUrlResponse;
  static deserializeBinaryFromReader(message: MessageUrlResponse, reader: jspb.BinaryReader): MessageUrlResponse;
}

export namespace MessageUrlResponse {
  export type AsObject = {
    urlLinkDeprecated: string,
    urlLink?: wechaty_puppet_url_link_pb.UrlLinkPayload.AsObject,
  }
}

export class MessageSendContactRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  getContactId(): string;
  setContactId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendContactRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendContactRequest): MessageSendContactRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendContactRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendContactRequest;
  static deserializeBinaryFromReader(message: MessageSendContactRequest, reader: jspb.BinaryReader): MessageSendContactRequest;
}

export namespace MessageSendContactRequest {
  export type AsObject = {
    conversationId: string,
    contactId: string,
  }
}

export class MessageSendContactResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendContactResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendContactResponse): MessageSendContactResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendContactResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendContactResponse;
  static deserializeBinaryFromReader(message: MessageSendContactResponse, reader: jspb.BinaryReader): MessageSendContactResponse;
}

export namespace MessageSendContactResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageSendFileRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  getFileBox(): string;
  setFileBox(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendFileRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendFileRequest): MessageSendFileRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendFileRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendFileRequest;
  static deserializeBinaryFromReader(message: MessageSendFileRequest, reader: jspb.BinaryReader): MessageSendFileRequest;
}

export namespace MessageSendFileRequest {
  export type AsObject = {
    conversationId: string,
    fileBox: string,
  }
}

export class MessageSendFileResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendFileResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendFileResponse): MessageSendFileResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendFileResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendFileResponse;
  static deserializeBinaryFromReader(message: MessageSendFileResponse, reader: jspb.BinaryReader): MessageSendFileResponse;
}

export namespace MessageSendFileResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageSendTextRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  getText(): string;
  setText(value: string): void;

  clearMentionalIdsList(): void;
  getMentionalIdsList(): Array<string>;
  setMentionalIdsList(value: Array<string>): void;
  addMentionalIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendTextRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendTextRequest): MessageSendTextRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendTextRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendTextRequest;
  static deserializeBinaryFromReader(message: MessageSendTextRequest, reader: jspb.BinaryReader): MessageSendTextRequest;
}

export namespace MessageSendTextRequest {
  export type AsObject = {
    conversationId: string,
    text: string,
    mentionalIdsList: Array<string>,
  }
}

export class MessageSendTextResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendTextResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendTextResponse): MessageSendTextResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendTextResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendTextResponse;
  static deserializeBinaryFromReader(message: MessageSendTextResponse, reader: jspb.BinaryReader): MessageSendTextResponse;
}

export namespace MessageSendTextResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageSendMiniProgramRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  getMiniProgramDeprecated(): string;
  setMiniProgramDeprecated(value: string): void;

  hasMiniProgram(): boolean;
  clearMiniProgram(): void;
  getMiniProgram(): wechaty_puppet_mini_program_pb.MiniProgramPayload | undefined;
  setMiniProgram(value?: wechaty_puppet_mini_program_pb.MiniProgramPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendMiniProgramRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendMiniProgramRequest): MessageSendMiniProgramRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendMiniProgramRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendMiniProgramRequest;
  static deserializeBinaryFromReader(message: MessageSendMiniProgramRequest, reader: jspb.BinaryReader): MessageSendMiniProgramRequest;
}

export namespace MessageSendMiniProgramRequest {
  export type AsObject = {
    conversationId: string,
    miniProgramDeprecated: string,
    miniProgram?: wechaty_puppet_mini_program_pb.MiniProgramPayload.AsObject,
  }
}

export class MessageSendMiniProgramResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendMiniProgramResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendMiniProgramResponse): MessageSendMiniProgramResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendMiniProgramResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendMiniProgramResponse;
  static deserializeBinaryFromReader(message: MessageSendMiniProgramResponse, reader: jspb.BinaryReader): MessageSendMiniProgramResponse;
}

export namespace MessageSendMiniProgramResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageSendUrlRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  getUrlLinkDeprecated(): string;
  setUrlLinkDeprecated(value: string): void;

  hasUrlLink(): boolean;
  clearUrlLink(): void;
  getUrlLink(): wechaty_puppet_url_link_pb.UrlLinkPayload | undefined;
  setUrlLink(value?: wechaty_puppet_url_link_pb.UrlLinkPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendUrlRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendUrlRequest): MessageSendUrlRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendUrlRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendUrlRequest;
  static deserializeBinaryFromReader(message: MessageSendUrlRequest, reader: jspb.BinaryReader): MessageSendUrlRequest;
}

export namespace MessageSendUrlRequest {
  export type AsObject = {
    conversationId: string,
    urlLinkDeprecated: string,
    urlLink?: wechaty_puppet_url_link_pb.UrlLinkPayload.AsObject,
  }
}

export class MessageSendUrlResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendUrlResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendUrlResponse): MessageSendUrlResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendUrlResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendUrlResponse;
  static deserializeBinaryFromReader(message: MessageSendUrlResponse, reader: jspb.BinaryReader): MessageSendUrlResponse;
}

export namespace MessageSendUrlResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageRecallRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageRecallRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageRecallRequest): MessageRecallRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageRecallRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageRecallRequest;
  static deserializeBinaryFromReader(message: MessageRecallRequest, reader: jspb.BinaryReader): MessageRecallRequest;
}

export namespace MessageRecallRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageRecallResponse extends jspb.Message {
  getSuccess(): boolean;
  setSuccess(value: boolean): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageRecallResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageRecallResponse): MessageRecallResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageRecallResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageRecallResponse;
  static deserializeBinaryFromReader(message: MessageRecallResponse, reader: jspb.BinaryReader): MessageRecallResponse;
}

export namespace MessageRecallResponse {
  export type AsObject = {
    success: boolean,
  }
}

export class MessageForwardRequest extends jspb.Message {
  getMessageId(): string;
  setMessageId(value: string): void;

  getConversationId(): string;
  setConversationId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageForwardRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageForwardRequest): MessageForwardRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageForwardRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageForwardRequest;
  static deserializeBinaryFromReader(message: MessageForwardRequest, reader: jspb.BinaryReader): MessageForwardRequest;
}

export namespace MessageForwardRequest {
  export type AsObject = {
    messageId: string,
    conversationId: string,
  }
}

export class MessageForwardResponse extends jspb.Message {
  hasIdStringValueDeprecated(): boolean;
  clearIdStringValueDeprecated(): void;
  getIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageForwardResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageForwardResponse): MessageForwardResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageForwardResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageForwardResponse;
  static deserializeBinaryFromReader(message: MessageForwardResponse, reader: jspb.BinaryReader): MessageForwardResponse;
}

export namespace MessageForwardResponse {
  export type AsObject = {
    idStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    id: string,
  }
}

export class MessageLocationRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageLocationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageLocationRequest): MessageLocationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageLocationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageLocationRequest;
  static deserializeBinaryFromReader(message: MessageLocationRequest, reader: jspb.BinaryReader): MessageLocationRequest;
}

export namespace MessageLocationRequest {
  export type AsObject = {
    id: string,
  }
}

export class MessageLocationResponse extends jspb.Message {
  hasLocation(): boolean;
  clearLocation(): void;
  getLocation(): wechaty_puppet_location_pb.LocationPayload | undefined;
  setLocation(value?: wechaty_puppet_location_pb.LocationPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageLocationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageLocationResponse): MessageLocationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageLocationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageLocationResponse;
  static deserializeBinaryFromReader(message: MessageLocationResponse, reader: jspb.BinaryReader): MessageLocationResponse;
}

export namespace MessageLocationResponse {
  export type AsObject = {
    location?: wechaty_puppet_location_pb.LocationPayload.AsObject,
  }
}

export class MessageSendLocationRequest extends jspb.Message {
  getConversationId(): string;
  setConversationId(value: string): void;

  hasLocation(): boolean;
  clearLocation(): void;
  getLocation(): wechaty_puppet_location_pb.LocationPayload | undefined;
  setLocation(value?: wechaty_puppet_location_pb.LocationPayload): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendLocationRequest.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendLocationRequest): MessageSendLocationRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendLocationRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendLocationRequest;
  static deserializeBinaryFromReader(message: MessageSendLocationRequest, reader: jspb.BinaryReader): MessageSendLocationRequest;
}

export namespace MessageSendLocationRequest {
  export type AsObject = {
    conversationId: string,
    location?: wechaty_puppet_location_pb.LocationPayload.AsObject,
  }
}

export class MessageSendLocationResponse extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): MessageSendLocationResponse.AsObject;
  static toObject(includeInstance: boolean, msg: MessageSendLocationResponse): MessageSendLocationResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: MessageSendLocationResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): MessageSendLocationResponse;
  static deserializeBinaryFromReader(message: MessageSendLocationResponse, reader: jspb.BinaryReader): MessageSendLocationResponse;
}

export namespace MessageSendLocationResponse {
  export type AsObject = {
    id: string,
  }
}

export interface MessageTypeMap {
  MESSAGE_TYPE_UNSPECIFIED: 0;
  MESSAGE_TYPE_ATTACHMENT: 1;
  MESSAGE_TYPE_AUDIO: 2;
  MESSAGE_TYPE_CONTACT: 3;
  MESSAGE_TYPE_EMOTICON: 4;
  MESSAGE_TYPE_IMAGE: 5;
  MESSAGE_TYPE_TEXT: 6;
  MESSAGE_TYPE_VIDEO: 7;
  MESSAGE_TYPE_CHAT_HISTORY: 8;
  MESSAGE_TYPE_LOCATION: 9;
  MESSAGE_TYPE_MINI_PROGRAM: 10;
  MESSAGE_TYPE_TRANSFER: 11;
  MESSAGE_TYPE_RED_ENVELOPE: 12;
  MESSAGE_TYPE_RECALLED: 13;
  MESSAGE_TYPE_URL: 14;
}

export const MessageType: MessageTypeMap;

