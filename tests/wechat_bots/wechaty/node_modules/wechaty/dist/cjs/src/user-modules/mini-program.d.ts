/**
 *   Wechaty Chatbot SDK - https://github.com/wechaty/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
import type * as PUPPET from 'wechaty-puppet';
import type { Constructor } from 'clone-class';
declare const MiniProgramMixin_base: ((abstract new (...args: any[]) => {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    new (): {};
};
declare class MiniProgramMixin extends MiniProgramMixin_base {
    readonly payload: PUPPET.payloads.MiniProgram;
    /**
     *
     * Create
     *
     */
    static create(): Promise<MiniProgramInterface>;
    constructor(payload: PUPPET.payloads.MiniProgram);
    appid(): undefined | string;
    title(): undefined | string;
    pagePath(): undefined | string;
    username(): undefined | string;
    description(): undefined | string;
    thumbUrl(): undefined | string;
    thumbKey(): undefined | string;
}
declare const MiniProgramImpl_base: {
    new (...args: any[]): {};
    valid: (o: any) => o is MiniProgramInterface;
    validInstance: (target: any) => target is MiniProgramMixin;
    validInterface: (target: any) => target is MiniProgramInterface;
} & typeof MiniProgramMixin;
declare class MiniProgramImpl extends MiniProgramImpl_base {
}
interface MiniProgramInterface extends MiniProgramImpl {
}
declare type MiniProgramConstructor = Constructor<MiniProgramInterface, typeof MiniProgramImpl>;
export type { MiniProgramConstructor, MiniProgramInterface, };
export { MiniProgramImpl, };
//# sourceMappingURL=mini-program.d.ts.map