"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.messageToSayable = void 0;
const PUPPET = __importStar(require("wechaty-puppet"));
const wechaty_puppet_1 = require("wechaty-puppet");
async function messageToSayable(message) {
    wechaty_puppet_1.log.verbose('Wechaty', 'toSayable(%s)', message);
    const type = message.type();
    switch (type) {
        case PUPPET.types.Message.Text:
            return message.text();
        case PUPPET.types.Message.Image:
        case PUPPET.types.Message.Attachment:
        case PUPPET.types.Message.Audio:
        case PUPPET.types.Message.Video:
        case PUPPET.types.Message.Emoticon:
            return message.toFileBox();
        case PUPPET.types.Message.Contact:
            return message.toContact();
        case PUPPET.types.Message.Url:
            return message.toUrlLink();
        case PUPPET.types.Message.MiniProgram:
            return message.toMiniProgram();
        case PUPPET.types.Message.Location:
            return message.toLocation();
        case PUPPET.types.Message.Post:
            return message.toPost();
        default:
            wechaty_puppet_1.log.warn('Wechaty', 'toSayable() can not convert not re-sayable type: %s(%s) for %s\n%s', PUPPET.types.Message[type], type, message, new Error().stack);
            return undefined;
    }
}
exports.messageToSayable = messageToSayable;
//# sourceMappingURL=message-to-sayable.js.map