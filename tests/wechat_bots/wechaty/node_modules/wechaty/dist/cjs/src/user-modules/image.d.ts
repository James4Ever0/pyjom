import type { FileBoxInterface } from 'file-box';
import type { Constructor } from 'clone-class';
declare const ImageMixin_base: ((abstract new (...args: any[]) => {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    new (): {};
};
declare class ImageMixin extends ImageMixin_base {
    id: string;
    static create(id: string): ImageInterface;
    constructor(id: string);
    thumbnail(): Promise<FileBoxInterface>;
    hd(): Promise<FileBoxInterface>;
    artwork(): Promise<FileBoxInterface>;
}
declare const ImageImpl_base: {
    new (...args: any[]): {};
    valid: (o: any) => o is ImageInterface;
    validInstance: (target: any) => target is ImageMixin;
    validInterface: (target: any) => target is ImageInterface;
} & typeof ImageMixin;
declare class ImageImpl extends ImageImpl_base {
}
interface ImageInterface extends ImageImpl {
}
declare type ImageConstructor = Constructor<ImageInterface, typeof ImageImpl>;
export type { ImageConstructor, ImageInterface, };
export { ImageImpl, };
//# sourceMappingURL=image.d.ts.map