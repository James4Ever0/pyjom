
// @ts-nocheck
/**
 * @fileoverview Closure Compiler externs for Ix
 * @externs
 * @suppress {duplicate,checkTypes}
 */
/** @type {symbol} */
Symbol.iterator;
/** @type {symbol} */
Symbol.observable;
/** @type {symbol} */
Symbol.asyncIterator;

var BufferIterable = function() {};
var buffer = function() {};
var CatchWithIterable = function() {};
var catchError = function() {};
var concatAll = function() {};
var concatWith = function() {};
var DefaultIfEmptyIterable = function() {};
var defaultIfEmpty = function() {};
var DistinctIterable = function() {};
var distinct = function() {};
var DistinctUntilChangedIterable = function() {};
var distinctUntilChanged = function() {};
var doWhile = function() {};
var EndWithIterable = function() {};
var endWith = function() {};
var ExceptIterable = function() {};
var except = function() {};
var ExpandIterable = function() {};
var expand = function() {};
var FilterIterable = function() {};
var filter = function() {};
var FinallyIterable = function() {};
var finalize = function() {};
var FlatMapIterable = function() {};
var flatMap = function() {};
var FlattenIterable = function() {};
/** @type {?} */
FlattenIterable.prototype._flatten;
var flat = function() {};
var GroupedIterable = function() {};
var GroupByIterable = function() {};
var groupBy = function() {};
var GroupJoinIterable = function() {};
var groupJoin = function() {};
var IgnoreElementsIterable = function() {};
var ignoreElements = function() {};
var JoinIterable = function() {};
var innerJoin = function() {};
var IntersectIterable = function() {};
var intersect = function() {};
var MapIterable = function() {};
var map = function() {};
var memoize = function() {};
var OrderedIterableBaseX = function() {};
/** @type {?} */
OrderedIterableBaseX.prototype.thenBy;
/** @type {?} */
OrderedIterableBaseX.prototype.thenByDescending;
var OrderedIterableX = function() {};
/** @type {?} */
OrderedIterableX.prototype._getSorter;
var orderBy = function() {};
var orderByDescending = function() {};
var thenBy = function() {};
var thenByDescending = function() {};
var PairwiseIterable = function() {};
var pairwise = function() {};
var pluck = function() {};
var publish = function() {};
var RepeatIterable = function() {};
var repeat = function() {};
var retry = function() {};
var ReverseIterable = function() {};
var reverse = function() {};
var ScanRightIterable = function() {};
var scanRight = function() {};
var ScanIterable = function() {};
var scan = function() {};
var share = function() {};
var SkipLastIterable = function() {};
var skipLast = function() {};
var SkipIterable = function() {};
var skip = function() {};
var SkipWhileIterable = function() {};
var skipWhile = function() {};
var SliceIterable = function() {};
var slice = function() {};
var StartWithIterable = function() {};
var startWith = function() {};
var TakeLastIterable = function() {};
var takeLast = function() {};
var TakeIterable = function() {};
var take = function() {};
var TakeWhileIterable = function() {};
var takeWhile = function() {};
var TapIterable = function() {};
var tap = function() {};
var toDOMStream = function() {};
var UnionIterable = function() {};
var union = function() {};
var zipWith = function() {};