{"version":3,"sources":["asynciterable/_sleep.ts"],"names":[],"mappings":";;;AAAA,8CAA2C;AAE3C,SAAgB,KAAK,CAAC,OAAe,EAAE,MAAoB;IACzD,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;YAC5B,MAAM,CAAC,IAAI,uBAAU,EAAE,CAAC,CAAC;SAC1B;QAED,MAAM,EAAE,GAAG,UAAU,CAAC,GAAG,EAAE;YACzB,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC7C,IAAI,MAAM,CAAC,OAAO,EAAE;oBAClB,OAAO,EAAE,CAAC;oBACV,OAAO;iBACR;aACF;YAED,OAAO,EAAE,CAAC;QACZ,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SAC3D;QAED,SAAS,OAAO;YACd,YAAY,CAAC,EAAE,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,uBAAU,EAAE,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AA3BD,sBA2BC","file":"_sleep.js","sourcesContent":["import { AbortError } from '../aborterror';\n\nexport function sleep(dueTime: number, signal?: AbortSignal) {\n  return new Promise<void>((resolve, reject) => {\n    if (signal && signal.aborted) {\n      reject(new AbortError());\n    }\n\n    const id = setTimeout(() => {\n      if (signal) {\n        signal.removeEventListener('abort', onAbort);\n        if (signal.aborted) {\n          onAbort();\n          return;\n        }\n      }\n\n      resolve();\n    }, dueTime);\n\n    if (signal) {\n      signal.addEventListener('abort', onAbort, { once: true });\n    }\n\n    function onAbort() {\n      clearTimeout(id);\n      reject(new AbortError());\n    }\n  });\n}\n"]}