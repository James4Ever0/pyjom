{"version":3,"sources":["asynciterable/operators/timestamp.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAOlD,MAAM,OAAO,sBAAgC,SAAQ,cAAkC;IAC7E,OAAO,CAAyB;IAExC,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAoB;QAChD,cAAc,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE;YAC5D,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACzC;IACH,CAAC;CACF;AAED;;;;;GAKG;AACH,MAAM,UAAU,SAAS;IACvB,OAAO,SAAS,yBAAyB,CACvC,MAA8B;QAE9B,OAAO,IAAI,sBAAsB,CAAU,MAAM,CAAC,CAAC;IACrD,CAAC,CAAC;AACJ,CAAC","file":"timestamp.js","sourcesContent":["import { AsyncIterableX } from '../asynciterablex';\nimport { OperatorAsyncFunction } from '../../interfaces';\nimport { wrapWithAbort } from './withabort';\nimport { throwIfAborted } from '../../aborterror';\n\nexport interface Timestamp<TSource> {\n  time: number;\n  value: TSource;\n}\n\nexport class TimestampAsyncIterable<TSource> extends AsyncIterableX<Timestamp<TSource>> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator](signal?: AbortSignal) {\n    throwIfAborted(signal);\n    for await (const item of wrapWithAbort(this._source, signal)) {\n      yield { time: Date.now(), value: item };\n    }\n  }\n}\n\n/**\n * Timestamps each element in an async-iterable sequence using the local system clock.\n *\n * @template TSource The type of the elements in the source sequence.\n * @returns {OperatorAsyncFunction<TSource, Timestamp<TSource>>} An async-iterable sequence with timestamp information on elements.\n */\nexport function timestamp<TSource>(): OperatorAsyncFunction<TSource, Timestamp<TSource>> {\n  return function timestampOperatorFunction(\n    source: AsyncIterable<TSource>\n  ): AsyncIterableX<Timestamp<TSource>> {\n    return new TimestampAsyncIterable<TSource>(source);\n  };\n}\n"]}