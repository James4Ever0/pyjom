{"version":3,"sources":["add/asynciterable-operators/catcherror.ts"],"names":[],"mappings":";;;AAAA,uEAAoE;AACpE,yEAAqF;AAErF;;GAEG;AACH,SAAgB,UAAU,CAExB,OAAqE;IAErE,OAAO,uBAAW,CAAO,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;AAC1C,CAAC;AALD,gCAKC;AAED,+BAAc,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC","file":"catcherror.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { catchError as _catchError } from '../../asynciterable/operators/catcherror';\n\n/**\n * @ignore\n */\nexport function catchProto<T, R>(\n  this: AsyncIterableX<T>,\n  handler: (error: any) => AsyncIterable<R> | Promise<AsyncIterable<R>>\n): AsyncIterableX<T | R> {\n  return _catchError<T, R>(handler)(this);\n}\n\nAsyncIterableX.prototype.catchError = catchProto;\n\nexport declare namespace asynciterable {\n  let catchError: typeof _catchError;\n}\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    catchError: typeof catchProto;\n  }\n}\n"]}