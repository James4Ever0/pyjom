{"version":3,"sources":["add/iterable-operators/orderby.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAoB,MAAM,kCAAkC,CAAC;AAMhG;;GAEG;AACH,MAAM,UAAU,YAAY,CAE1B,WAAoC,EACpC,QAA2C;IAE3C,OAAO,OAAO,CAAgB,WAAW,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7D,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,sBAAsB,CAEpC,WAAoC,EACpC,QAA2C;IAE3C,OAAO,iBAAiB,CAAgB,WAAW,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACvE,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY,CAAC;AAC3C,SAAS,CAAC,SAAS,CAAC,iBAAiB,GAAG,sBAAsB,CAAC","file":"orderby.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { orderBy, orderByDescending, OrderedIterableX } from '../../iterable/operators/orderby';\nimport {\n  thenBy as _thenBy,\n  thenByDescending as _thenByDescending\n} from '../../iterable/operators/orderby';\n\n/**\n * @ignore\n */\nexport function orderByProto<TKey, TSource>(\n  this: IterableX<TSource>,\n  keySelector: (item: TSource) => TKey,\n  comparer?: (fst: TKey, snd: TKey) => number\n): OrderedIterableX<TKey, TSource> {\n  return orderBy<TKey, TSource>(keySelector, comparer)(this);\n}\n\n/**\n * @ignore\n */\nexport function orderByDescendingProto<TKey, TSource>(\n  this: IterableX<TSource>,\n  keySelector: (item: TSource) => TKey,\n  comparer?: (fst: TKey, snd: TKey) => number\n): OrderedIterableX<TKey, TSource> {\n  return orderByDescending<TKey, TSource>(keySelector, comparer)(this);\n}\n\nIterableX.prototype.orderBy = orderByProto;\nIterableX.prototype.orderByDescending = orderByDescendingProto;\n\nexport declare namespace iterable {\n  let thenBy: typeof _thenBy;\n  let thenByDescending: typeof _thenByDescending;\n}\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    orderBy: typeof orderByProto;\n    orderByDescending: typeof orderByDescendingProto;\n  }\n}\n"]}