{"version":3,"sources":["add/iterable-operators/tap.ts"],"names":[],"mappings":";;;AAAA,wDAAqD;AACrD,sDAAmD;AAgBnD,SAAgB,QAAQ,CAEtB,cAA4E,EAC5E,KAAkC,EAClC,QAA6B;IAE7B,OAAO,SAAG,CAAU,cAAqB,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC;AAPD,4BAOC;AAED,qBAAS,CAAC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC","file":"tap.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { tap } from '../../iterable/operators/tap';\nimport { PartialObserver } from '../../observer';\n\n/**\n * @ignore\n */\nexport function tapProto<TSource>(\n  this: IterableX<TSource>,\n  observer: PartialObserver<TSource>\n): IterableX<TSource>;\nexport function tapProto<TSource>(\n  this: IterableX<TSource>,\n  next?: ((value: TSource) => any) | null,\n  error?: ((err: any) => any) | null,\n  complete?: (() => any) | null\n): IterableX<TSource>;\nexport function tapProto<TSource>(\n  this: IterableX<TSource>,\n  observerOrNext?: PartialObserver<TSource> | ((value: TSource) => any) | null,\n  error?: ((err: any) => any) | null,\n  complete?: (() => any) | null\n): IterableX<TSource> {\n  return tap<TSource>(observerOrNext as any, error, complete)(this);\n}\n\nIterableX.prototype.tap = tapProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    tap: typeof tapProto;\n  }\n}\n"]}