{"version":3,"sources":["add/iterable-operators/scanright.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAC;AAevE,MAAM,UAAU,cAAc,CAE5B,oBAA4F,EAC5F,IAAQ;IAER,OAAO,IAAI,iBAAiB,CAC1B,IAAI;IACJ,6CAA6C;IAC7C,OAAO,oBAAoB,KAAK,UAAU;QACxC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC;YACpB,CAAC,CAAC,kBAAkB;gBAClB,EAAE,UAAU,EAAE,oBAAoB,EAAE,MAAM,EAAE,IAAI,EAAE;YACpD,CAAC,CAAC,kBAAkB;gBAClB,EAAE,UAAU,EAAE,oBAAoB,EAAE;QACxC,CAAC,CAAC,oBAAoB,CACzB,CAAC;AACJ,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC","file":"scanright.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { ScanRightIterable } from '../../iterable/operators/scanright';\nimport { ScanOptions } from '../../iterable/operators/scanoptions';\n\n/**\n * @ignore\n */\nexport function scanRightProto<T, R = T>(\n  this: IterableX<T>,\n  options: ScanOptions<T, R>\n): IterableX<R>;\nexport function scanRightProto<T, R = T>(\n  this: IterableX<T>,\n  accumulator: (accumulator: R, current: T, index: number) => R,\n  seed?: R\n): IterableX<R>;\nexport function scanRightProto<T, R = T>(\n  this: IterableX<T>,\n  optionsOrAccumulator: ScanOptions<T, R> | ((accumulator: R, current: T, index: number) => R),\n  seed?: R\n): IterableX<R> {\n  return new ScanRightIterable(\n    this,\n    // eslint-disable-next-line no-nested-ternary\n    typeof optionsOrAccumulator === 'function'\n      ? arguments.length > 1\n        ? // prettier-ignore\n          { 'callback': optionsOrAccumulator, 'seed': seed }\n        : // prettier-ignore\n          { 'callback': optionsOrAccumulator }\n      : optionsOrAccumulator\n  );\n}\n\nIterableX.prototype.scanRight = scanRightProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    scanRight: typeof scanRightProto;\n  }\n}\n"]}