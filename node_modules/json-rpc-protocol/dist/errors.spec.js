"use strict";
/* eslint-env jest */
Object.defineProperty(exports, "__esModule", { value: true });
var errors_1 = require("./errors");
// ===================================================================
describe('errors', function () {
    it('JsonRpcError()', function () {
        var e = new errors_1.JsonRpcError();
        expect(e).toBeInstanceOf(Error);
        expect(e.code).toBe(-32000);
    });
    it('InvalidJson()', function () {
        var e = new errors_1.InvalidJson();
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32700);
    });
    it('InvalidRequest()', function () {
        var e = new errors_1.InvalidRequest();
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32600);
    });
    it('InvalidRequest(message)', function () {
        var e = new errors_1.InvalidRequest('invalid identifier');
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32600);
        expect(e.message).toBe('invalid identifier');
    });
    it('MethodNotFound()', function () {
        var e = new errors_1.MethodNotFound();
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32601);
    });
    it('MethodNotFound(methodName)', function () {
        var e = new errors_1.MethodNotFound('foo');
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32601);
        expect(e.data).toBe('foo');
    });
    it('InvalidParameters()', function () {
        var e = new errors_1.InvalidParameters();
        expect(e).toBeInstanceOf(errors_1.JsonRpcError);
        expect(e.code).toBe(-32602);
    });
});
//# sourceMappingURL=errors.spec.js.map