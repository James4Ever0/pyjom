import type { Constructor } from 'clone-class';
import type { ContactInterface } from './contact.js';
declare const MomentMixin_base: ((abstract new (...args: any[]) => {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    new (): {};
};
declare class MomentMixin extends MomentMixin_base {
    static post(): void;
    static timeline(contact: ContactInterface): MomentImpl[];
    constructor();
}
declare const MomentImpl_base: {
    new (...args: any[]): {};
    valid: (o: any) => o is MomentInterface;
    validInstance: (target: any) => target is MomentMixin;
    validInterface: (target: any) => target is MomentInterface;
} & typeof MomentMixin;
declare class MomentImpl extends MomentImpl_base {
}
interface MomentInterface extends MomentImpl {
}
declare type MomentConstructor = Constructor<MomentInterface, typeof MomentImpl>;
export type { MomentConstructor, MomentInterface, };
export { MomentImpl, };
//# sourceMappingURL=moment.d.ts.map