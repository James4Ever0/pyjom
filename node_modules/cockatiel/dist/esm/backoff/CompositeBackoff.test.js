import { expect } from 'chai';
import { expectDurations } from './Backoff.test';
import { CompositeBackoff } from './CompositeBackoff';
import { ConstantBackoff } from './ConstantBackoff';
describe('CompositeBackoff', () => {
    const withBias = (bias) => new CompositeBackoff(bias, new ConstantBackoff(10, 4), new ConstantBackoff(20, 2));
    it('biases correctly', () => {
        var _a, _b, _c, _d;
        expect((_a = withBias('a').next(undefined)) === null || _a === void 0 ? void 0 : _a.duration).to.equal(10);
        expect((_b = withBias('b').next(undefined)) === null || _b === void 0 ? void 0 : _b.duration).to.equal(20);
        expect((_c = withBias('min').next(undefined)) === null || _c === void 0 ? void 0 : _c.duration).to.equal(10);
        expect((_d = withBias('max').next(undefined)) === null || _d === void 0 ? void 0 : _d.duration).to.equal(20);
    });
    it('limits the number of retries', () => {
        expectDurations(withBias('max'), [20, 20, undefined]);
    });
});
//# sourceMappingURL=CompositeBackoff.test.js.map