import * as Result from './Result';
export function rest(config) {
    return {
        helpTopics() {
            var _a, _b;
            const displayName = (_a = config === null || config === void 0 ? void 0 : config.displayName) !== null && _a !== void 0 ? _a : 'arg';
            return [
                {
                    usage: `[...${displayName}]`,
                    category: 'arguments',
                    defaults: [],
                    description: (_b = config === null || config === void 0 ? void 0 : config.description) !== null && _b !== void 0 ? _b : 'catches the rest of the values',
                },
            ];
        },
        register() { },
        async parse(context) {
            const visitedNodeIndices = [...context.visitedNodes]
                .map((x) => context.nodes.indexOf(x))
                .filter((x) => x > -1);
            if (visitedNodeIndices.length === 0) {
                return Result.ok([]);
            }
            const maxIndex = Math.max(...visitedNodeIndices);
            const restItems = context.nodes.slice(maxIndex + 1);
            restItems.forEach((node) => context.visitedNodes.add(node));
            return Result.ok(restItems.map((x) => x.raw));
        },
    };
}
//# sourceMappingURL=rest.js.map