/**
 *   Wechaty Open Source Software - https://github.com/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
import type { Dispatch } from 'redux';
export declare const ding: (dispatch: Dispatch) => (puppetId: string, data: string) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/DING_COMMAND", {
    data: string | undefined;
}, {
    puppetId: string;
}>;
export declare const reset: (dispatch: Dispatch) => (puppetId: string, data: string) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/RESET_COMMAND", {
    data: string | undefined;
}, {
    puppetId: string;
}>;
/**
 * Remove the puppet from registry
 *  caution: all actions will failed if the specified puppet id is not in the registry
 */
export declare const deregisterPuppet: (dispatch: Dispatch) => (puppetId: string) => import("typesafe-actions").PayloadAction<"wechaty-redux/DEREGISTER_PUPPET_COMMAND", {
    puppetId: string;
}>;
export declare const nop: (dispatch: Dispatch) => () => import("typesafe-actions").EmptyAction<"wechaty-redux/NOP_COMMAND">;
//# sourceMappingURL=operations.d.ts.map