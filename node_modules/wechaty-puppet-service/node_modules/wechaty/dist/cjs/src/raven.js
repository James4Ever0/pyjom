"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.wechatyCaptureException = void 0;
const os_1 = __importDefault(require("os"));
const wechaty_puppet_1 = require("wechaty-puppet");
const config_js_1 = require("./config.js");
let raven;
let enabled = false;
function getRavenDsn() {
    // const RAVEN_DSN = 'https://f6770399ee65459a82af82650231b22c:d8d11b283deb441e807079b8bb2c45cd@sentry.io/179672'
    const dsn = process.env['WECHATY_RAVEN_DSN'];
    return dsn;
}
function enableRaven(dsn) {
    /**
     * Raven.io
     */
    const ravenOptions = {
        release: config_js_1.VERSION,
        tags: {
            git_commit: config_js_1.GIT_COMMIT_HASH,
            platform: process.env['WECHATY_DOCKER']
                ? 'docker'
                : os_1.default.platform(),
        },
    };
    raven.disableConsoleAlerts();
    raven
        .config(dsn, ravenOptions)
        .install();
    enabled = true;
}
async function init() {
    try {
        raven = await Promise.resolve().then(() => __importStar(require('raven')));
        wechaty_puppet_1.log.verbose('Wechaty', 'init() Raven enabled (import("raven") succeed)');
    }
    catch (e) {
        // It's ok when there's no raven installed
        wechaty_puppet_1.log.verbose('Wechaty', 'init() Raven disabled (import("raven") failed)');
        return;
    }
    const dsn = getRavenDsn();
    if (!dsn) {
        wechaty_puppet_1.log.verbose('Wechaty', 'init() getRavenDsn() return undefined, skipped.');
        return;
    }
    enableRaven(dsn);
}
function wechatyCaptureException(e) {
    if (enabled) {
        raven.captureException(e);
    }
}
exports.wechatyCaptureException = wechatyCaptureException;
init().catch(console.error);
//# sourceMappingURL=raven.js.map