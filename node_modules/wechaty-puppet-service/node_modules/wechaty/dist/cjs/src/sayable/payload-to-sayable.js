"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.payloadToSayableWechaty = void 0;
const PUPPET = __importStar(require("wechaty-puppet"));
const wechaty_puppet_1 = require("wechaty-puppet");
const payloadToSayableWechaty = (wechaty) => async (sayable) => {
    wechaty_puppet_1.log.verbose('Wechaty', 'payloadToSayable({type: %s(%s)})', PUPPET.types.Message[sayable.type], sayable.type);
    switch (sayable.type) {
        case PUPPET.types.Sayable.Text:
            return sayable.payload.text;
        case PUPPET.types.Sayable.Emoticon:
        case PUPPET.types.Sayable.Image:
        case PUPPET.types.Sayable.Video:
        case PUPPET.types.Sayable.Audio:
        case PUPPET.types.Sayable.Attachment:
            return sayable.payload.filebox;
        case PUPPET.types.Sayable.Contact:
            return wechaty.Contact.find({ id: sayable.payload.contactId });
        case PUPPET.types.Sayable.Location:
            return new wechaty.Location(sayable.payload);
        case PUPPET.types.Sayable.MiniProgram:
            return new wechaty.MiniProgram(sayable.payload);
        case PUPPET.types.Sayable.Url:
            return new wechaty.UrlLink(sayable.payload);
        case PUPPET.types.Sayable.Post:
            return new wechaty.Post(sayable.payload);
        default:
            throw new Error('payloadToSayable() not support payload: ' + JSON.stringify(sayable));
    }
};
exports.payloadToSayableWechaty = payloadToSayableWechaty;
//# sourceMappingURL=payload-to-sayable.js.map