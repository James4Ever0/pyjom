{"version":3,"sources":["../../src/util/global.js"],"names":["convertEmoji","formatNum","getClientMsgId","getDeviceID","debug","isStandardBrowserEnv","window","document","createElement","isFunction","Object","prototype","toString","call","val","s","replace","a","b","toLowerCase","length","slice","Error","String","fromCodePoint","apply","err","num","isNaN","n","Array","join","assert","equal","actual","expected","response","Assert","e","request","notEqual","ok","Date","now","Math","random","toFixed","substring"],"mappings":"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","file":"global.js","sourcesContent":["'use strict'\nimport Assert from 'assert'\nimport _debug from 'debug'\nconst debug = _debug('util')\n\nexport const isStandardBrowserEnv = (\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined' &&\n  typeof document.createElement === 'function'\n)\n\nexport const isFunction = val => Object.prototype.toString.call(val) === '[object Function]'\n\nexport function convertEmoji (s) {\n  return s ? s.replace(/<span.*?class=\"emoji emoji(.*?)\"><\\/span>/g, (a, b) => {\n    switch (b.toLowerCase()) {\n      case '1f639':\n        b = '1f602'\n        break\n      case '1f64d':\n        b = '1f614'\n        break\n    }\n    try {\n      let s = null\n      if (b.length === 4 || b.length === 5) {\n        s = ['0x' + b]\n      } else if (b.length === 8) {\n        s = ['0x' + b.slice(0, 4), '0x' + b.slice(4, 8)]\n      } else if (b.length === 10) {\n        s = ['0x' + b.slice(0, 5), '0x' + b.slice(5, 10)]\n      } else {\n        throw new Error('unknown emoji characters')\n      }\n      return String.fromCodePoint.apply(null, s)\n    } catch (err) {\n      debug(b, err)\n      return '*'\n    }\n  }) : ''\n}\n\nexport function formatNum (num, length) {\n  num = (isNaN(num) ? 0 : num).toString()\n  let n = length - num.length\n\n  return n > 0 ? [new Array(n + 1).join('0'), num].join('') : num\n}\n\nexport const assert = {\n  equal (actual, expected, response) {\n    try {\n      Assert.equal(actual, expected)\n    } catch (e) {\n      debug(e)\n      delete response.request\n      e.response = response\n      throw e\n    }\n  },\n  notEqual (actual, expected, response) {\n    try {\n      Assert.notEqual(actual, expected)\n    } catch (e) {\n      debug(e)\n      delete response.request\n      e.response = response\n      throw e\n    }\n  },\n  ok (actual, response) {\n    try {\n      Assert.ok(actual)\n    } catch (e) {\n      debug(e)\n      delete response.request\n      e.response = response\n      throw e\n    }\n  }\n}\n\nexport function getClientMsgId () {\n  return (Date.now() + Math.random().toFixed(3)).replace('.', '')\n}\n\nexport function getDeviceID () {\n  return 'e' + ('' + Math.random().toFixed(15)).substring(2, 17)\n}\n"]}