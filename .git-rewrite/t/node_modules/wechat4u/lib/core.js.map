{"version":3,"sources":["../src/core.js"],"names":["debug","AlreadyLogoutError","message","constructor","__proto__","prototype","Error","WechatCore","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Request","Cookie","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","assert","equal","code","catch","err","tips","params","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","fun","pm","headers","forEach","test","item","Date","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SYNCCHECK_RET_LOGOUT","SKey","updateSyncKey","Object","assign","User","to","pass_ticket","lang","API_webwxstatusnotify","seq","API_webwxgetcontact","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","toUserName","name","size","ext","mediatype","reject","File","Blob","Buffer","isBuffer","mime","lookup","readable","path","basename","pipe","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","FormData","append","toGMTString","encodeURI","contentType","knownLength","isStandardBrowserEnv","getHeaders","f","API_webwxuploadmedia","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","API_webwxverifyuser","content","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","RemarkName","CmdId","API_webwxoplog","NewName","NewTopic","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID","keys","key"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\nimport bl from 'bl'\nimport _debug from 'debug'\nimport FormData from 'form-data'\nimport mime from 'mime'\nimport {\n  getCONF,\n  Request,\n  isStandardBrowserEnv,\n  assert,\n  getClientMsgId,\n  getDeviceID\n} from './util'\n\nconst debug = _debug('core')\nexport class AlreadyLogoutError extends Error {\n  constructor (message = 'already logout') {\n    super(message)\n    // fuck the babel\n    this.constructor = AlreadyLogoutError\n    this.__proto__ = AlreadyLogoutError.prototype\n  }\n}\n\nexport default class WechatCore {\n  constructor (data) {\n    this.PROP = {\n      uuid: '',\n      uin: '',\n      sid: '',\n      skey: '',\n      passTicket: '',\n      formatedSyncKey: '',\n      webwxDataTicket: '',\n      syncKey: {\n        List: []\n      }\n    }\n    this.CONF = getCONF()\n    this.COOKIE = {}\n    this.user = {}\n    if (data) {\n      this.botData = data\n    }\n\n    this.request = new Request({\n      Cookie: this.COOKIE\n    })\n  }\n\n  get botData () {\n    return {\n      PROP: this.PROP,\n      CONF: this.CONF,\n      COOKIE: this.COOKIE,\n      user: this.user\n    }\n  }\n\n  set botData (data) {\n    Object.keys(data).forEach(key => {\n      Object.assign(this[key], data[key])\n    })\n  }\n\n  getUUID () {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_jsLogin\n      }).then(res => {\n        let window = {\n          QRLogin: {}\n        }\n        // res.data: \"window.QRLogin.code = xxx; ...\"\n        // eslint-disable-next-line\n        eval(res.data)\n        assert.equal(window.QRLogin.code, 200, res)\n\n        this.PROP.uuid = window.QRLogin.uuid\n        return window.QRLogin.uuid\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取UUID失败'\n      throw err\n    })\n  }\n\n  checkLogin () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'tip': 0,\n        'uuid': this.PROP.uuid,\n        'loginicon': true\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_login,\n        params: params\n      }).then(res => {\n        let window = {}\n\n        // eslint-disable-next-line\n        eval(res.data)\n\n        assert.notEqual(window.code, 400, res)\n\n        if (window.code === 200) {\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\n          this.rediUri = window.redirect_uri\n        } else if (window.code === 201 && window.userAvatar) {\n          // this.user.userAvatar = window.userAvatar\n        }\n        return window\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取手机确认登录信息失败'\n      throw err\n    })\n  }\n\n  login () {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'GET',\n        url: this.rediUri,\n        params: {\n          fun: 'new'\n        }\n      }).then(res => {\n        let pm = res.data.match(/<ret>(.*)<\\/ret>/)\n        if (pm && pm[1] === '0') {\n          this.PROP.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\n          this.PROP.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\n          this.PROP.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\n          this.PROP.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\n        }\n        if (res.headers['set-cookie']) {\n          res.headers['set-cookie'].forEach(item => {\n            if (/webwx.*?data.*?ticket/i.test(item)) {\n              this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\n            } else if (/wxuin/i.test(item)) {\n              this.PROP.uin = item.match(/=(.*?);/)[1]\n            } else if (/wxsid/i.test(item)) {\n              this.PROP.sid = item.match(/=(.*?);/)[1]\n            }\n          })\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '登录失败'\n      throw err\n    })\n  }\n\n  init () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'skey': this.PROP.skey,\n        'r': ~new Date()\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxinit,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        this.updateSyncKey(data)\n        Object.assign(this.user, data.User)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '微信初始化失败'\n      throw err\n    })\n  }\n\n  notifyMobile (to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        lang: 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Code': to ? 1 : 3,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to || this.user['UserName'],\n        'ClientMsgId': getClientMsgId()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxstatusnotify,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '手机状态通知失败'\n      throw err\n    })\n  }\n\n  getContact (seq = 0) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'lang': 'zh_CN',\n        'pass_ticket': this.PROP.passTicket,\n        'seq': seq,\n        'skey': this.PROP.skey,\n        'r': +new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxgetcontact,\n        params: params\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取通讯录失败'\n      throw err\n    })\n  }\n\n  batchGetContact (contacts) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'type': 'ex',\n        'r': +new Date(),\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': contacts.length,\n        'List': contacts\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxbatchgetcontact,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data.ContactList\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '批量获取联系人失败'\n      throw err\n    })\n  }\n\n  statReport (text) {\n    return Promise.resolve().then(() => {\n      text = text || {\n        'type': '[action-record]',\n        'data': {\n          'actions': [{\n            'type': 'click',\n            'action': '发送框',\n            'time': +new Date()\n          }]\n        }\n      }\n      text = JSON.stringify(text)\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'new',\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': 1,\n        'List': [{\n          'Text': text,\n          'Type': 1\n        }]\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxreport,\n        params: params,\n        data: data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '状态报告失败'\n      throw err\n    })\n  }\n\n  syncCheck () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'r': +new Date(),\n        'sid': this.PROP.sid,\n        'uin': this.PROP.uin,\n        'skey': this.PROP.skey,\n        'deviceid': getDeviceID(),\n        'synckey': this.PROP.formatedSyncKey\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_synccheck,\n        params: params\n      }).then(res => {\n        let window = {\n          synccheck: {}\n        }\n\n        try {\n          // eslint-disable-next-line\n          eval(res.data)\n        } catch (ex) {\n          window.synccheck = { retcode: '0', selector: '0' }\n        }\n        if (window.synccheck.retcode == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\n        return window.synccheck.selector\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '同步失败'\n      throw err\n    })\n  }\n\n  sync () {\n    return Promise.resolve().then(() => {\n      let params = {\n        'sid': this.PROP.sid,\n        'skey': this.PROP.skey,\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'SyncKey': this.PROP.syncKey,\n        'rr': ~new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsync,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        if (data.BaseResponse.Ret == this.CONF.SYNCCHECK_RET_LOGOUT) {\n          throw new AlreadyLogoutError()\n        }\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        this.updateSyncKey(data)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取新信息失败'\n      throw err\n    })\n  }\n\n  updateSyncKey (data) {\n    if (data.SyncKey) {\n      this.PROP.syncKey = data.SyncKey\n    }\n    if (data.SyncCheckKey) {\n      let synckeylist = []\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\n      let synckeylist = []\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    }\n  }\n\n  logout () {\n    return Promise.resolve().then(() => {\n      let params = {\n        redirect: 1,\n        type: 0,\n        skey: this.PROP.skey,\n        lang: 'zh_CN'\n      }\n\n      // data加上会出错，不加data也能登出\n      // let data = {\n      //   sid: this.PROP.sid,\n      //   uin: this.PROP.uin\n      // }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxlogout,\n        params: params\n      }).then(res => {\n        return '登出成功'\n      }).catch(err => {\n        debug(err)\n        return '可能登出成功'\n      })\n    })\n  }\n\n  sendText (msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_TEXT,\n          'Content': msg,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文本信息失败'\n      throw err\n    })\n  }\n\n  sendEmoticon (id, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'sys',\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_EMOTICON,\n          'EmojiFlag': 2,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n\n      if (id.indexOf('@') === 0) {\n        data.Msg.MediaId = id\n      } else {\n        data.Msg.EMoticonMd5 = id\n      }\n\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendemoticon,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送表情信息失败'\n      throw err\n    })\n  }\n\n  // file: Stream, Buffer, File, Blob\n  uploadMedia (file, filename, toUserName) {\n    return Promise.resolve().then(() => {\n      let name, type, size, ext, mediatype, data\n      return new Promise((resolve, reject) => {\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\n          name = file.name || 'file'\n          type = file.type\n          size = file.size\n          data = file\n          return resolve()\n        } else if (Buffer.isBuffer(file)) {\n          if (!filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = filename\n          type = mime.lookup(name)\n          size = file.length\n          data = file\n          return resolve()\n        } else if (file.readable) {\n          if (!file.path && !filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = path.basename(file.path || filename)\n          type = mime.lookup(name)\n          file.pipe(bl((err, buffer) => {\n            if (err) {\n              return reject(err)\n            }\n            size = buffer.length\n            data = buffer\n            return resolve()\n          }))\n        }\n      }).then(() => {\n        ext = name.match(/.*\\.(.*)/)\n        if (ext) {\n          ext = ext[1].toLowerCase()\n        } else {\n          ext = ''\n        }\n\n        switch (ext) {\n          case 'bmp':\n          case 'jpeg':\n          case 'jpg':\n          case 'png':\n            mediatype = 'pic'\n            break\n          case 'mp4':\n            mediatype = 'video'\n            break\n          default:\n            mediatype = 'doc'\n        }\n\n        let clientMsgId = getClientMsgId()\n\n        let uploadMediaRequest = JSON.stringify({\n          BaseRequest: this.getBaseRequest(),\n          ClientMediaId: clientMsgId,\n          TotalLen: size,\n          StartPos: 0,\n          DataLen: size,\n          MediaType: 4,\n          UploadType: 2,\n          FromUserName: this.user.UserName,\n          ToUserName: toUserName || this.user.UserName\n        })\n\n        let form = new FormData()\n        form.append('name', name)\n        form.append('type', type)\n        form.append('lastModifiedDate', new Date().toGMTString())\n        form.append('size', size)\n        form.append('mediatype', mediatype)\n        form.append('uploadmediarequest', uploadMediaRequest)\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\n        form.append('filename', data, {\n          filename: name,\n          contentType: type,\n          knownLength: size\n        })\n        return new Promise((resolve, reject) => {\n          if (isStandardBrowserEnv) {\n            return resolve({\n              data: form,\n              headers: {}\n            })\n          } else {\n            form.pipe(bl((err, buffer) => {\n              if (err) {\n                return reject(err)\n              }\n              return resolve({\n                data: buffer,\n                headers: form.getHeaders()\n              })\n            }))\n          }\n        })\n      }).then(data => {\n        let params = {\n          f: 'json'\n        }\n\n        return this.request({\n          method: 'POST',\n          url: this.CONF.API_webwxuploadmedia,\n          headers: data.headers,\n          params: params,\n          data: data.data\n        })\n      }).then(res => {\n        let data = res.data\n        let mediaId = data.MediaId\n        assert.ok(mediaId, res)\n\n        return {\n          name: name,\n          size: size,\n          ext: ext,\n          mediatype: mediatype,\n          mediaId: mediaId\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '上传媒体文件失败'\n      throw err\n    })\n  }\n\n  sendPic (mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_IMAGE,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgimg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送图片失败'\n      throw err\n    })\n  }\n\n  sendVideo (mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_VIDEO,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgvedio,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送视频失败'\n      throw err\n    })\n  }\n\n  sendDoc (mediaId, name, size, ext, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendappmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '发送文件失败'\n      throw err\n    })\n  }\n\n  forwardMsg (msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 2,\n        'Msg': {\n          'Type': msg.MsgType,\n          'MediaId': '',\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>'),\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      let url, pm\n      switch (msg.MsgType) {\n        case this.CONF.MSGTYPE_TEXT:\n          url = this.CONF.API_webwxsendmsg\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\n          }\n          break\n        case this.CONF.MSGTYPE_IMAGE:\n          url = this.CONF.API_webwxsendmsgimg\n          break\n        case this.CONF.MSGTYPE_EMOTICON:\n          url = this.CONF.API_webwxsendemoticon\n          params.fun = 'sys'\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\n          if (!data.Msg.EMoticonMd5) {\n            throw new Error('商店表情不能转发')\n          }\n          data.Msg.EmojiFlag = 2\n          data.Scene = 0\n          delete data.Msg.MediaId\n          delete data.Msg.Content\n          break\n        case this.CONF.MSGTYPE_MICROVIDEO:\n        case this.CONF.MSGTYPE_VIDEO:\n          url = this.CONF.API_webwxsendmsgvedio\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\n          break\n        case this.CONF.MSGTYPE_APP:\n          url = this.CONF.API_webwxsendappmsg\n          data.Msg.Type = msg.AppMsgType\n          data.Msg.Content = data.Msg.Content.replace(\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\n            `$1${msg.MediaId}$2`)\n          break\n        default:\n          throw new Error('该消息类型不能直接转发')\n      }\n      return this.request({\n        method: 'POST',\n        url: url,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '转发消息失败'\n      throw err\n    })\n  }\n\n  getMsgImg (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey,\n        type: 'big'\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetmsgimg,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取图片或表情失败'\n      throw err\n    })\n  }\n\n  getVideo (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvideo,\n        headers: {\n          'Range': 'bytes=0-'\n        },\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取视频失败'\n      throw err\n    })\n  }\n\n  getVoice (msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvoice,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取声音失败'\n      throw err\n    })\n  }\n\n  getHeadImg (HeadImgUrl) {\n    return Promise.resolve().then(() => {\n      let url = this.CONF.origin + HeadImgUrl\n      return this.request({\n        method: 'GET',\n        url: url,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取头像失败'\n      throw err\n    })\n  }\n\n  getDoc (FromUserName, MediaId, FileName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        sender: FromUserName,\n        mediaid: MediaId,\n        filename: FileName,\n        fromuser: this.user.UserName,\n        pass_ticket: this.PROP.passTicket,\n        webwx_data_ticket: this.PROP.webwxDataTicket\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxdownloadmedia,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '获取文件失败'\n      throw err\n    })\n  }\n\n  verifyUser (UserName, Ticket) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Opcode': 3,\n        'VerifyUserListSize': 1,\n        'VerifyUserList': [{\n          'Value': UserName,\n          'VerifyUserTicket': Ticket\n        }],\n        'VerifyContent': '',\n        'SceneListCount': 1,\n        'SceneList': [33],\n        'skey': this.PROP.skey\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxverifyuser,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '通过好友请求失败'\n      throw err\n    })\n  }\n\n  /**\n   * 添加好友\n   * @param UserName 待添加用户的UserName\n   * @param content\n   * @returns {Promise.<TResult>}\n   */\n  addFriend (UserName, content = '我是' + this.user.NickName) {\n    let params = {\n      'pass_ticket': this.PROP.passTicket,\n      'lang': 'zh_CN'\n    }\n\n    let data = {\n      'BaseRequest': this.getBaseRequest(),\n      'Opcode': 2,\n      'VerifyUserListSize': 1,\n      'VerifyUserList': [{\n        'Value': UserName,\n        'VerifyUserTicket': ''\n      }],\n      'VerifyContent': content,\n      'SceneListCount': 1,\n      'SceneList': [33],\n      'skey': this.PROP.skey\n    }\n\n    return this.request({\n      method: 'POST',\n      url: this.CONF.API_webwxverifyuser,\n      params: params,\n      data: data\n    }).then(res => {\n      let data = res.data\n      assert.equal(data.BaseResponse.Ret, 0, res)\n      return data\n    }).catch(err => {\n      debug(err)\n      err.tips = '添加好友失败'\n      throw err\n    })\n  }\n\n  // Topic: Chatroom name\n  // MemberList format:\n  // [\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\n  // ]\n  createChatroom (Topic, MemberList) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN',\n        'r': ~new Date()\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        MemberCount: MemberList.length,\n        MemberList: MemberList,\n        Topic: Topic\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxcreatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '创建群失败'\n      throw err\n    })\n  }\n\n  // fun: 'addmember' or 'delmember' or 'invitemember'\n  updateChatroom (ChatRoomUserName, MemberList, fun) {\n    return Promise.resolve().then(() => {\n      let params = {\n        fun: fun\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName\n      }\n      if (fun === 'addmember') {\n        data.AddMemberList = MemberList.toString()\n      } else if (fun === 'delmember') {\n        data.DelMemberList = MemberList.toString()\n      } else if (fun === 'invitemember') {\n        data.InviteMemberList = MemberList.toString()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '邀请或踢出群成员失败'\n      throw err\n    })\n  }\n\n  // OP: 1 联系人置顶 0 取消置顶\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\n  opLog (UserName, OP, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 3,\n        OP: OP,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '置顶或取消置顶失败'\n      throw err\n    })\n  }\n\n  updateRemarkName (UserName, RemarkName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 2,\n        RemarkName: RemarkName,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      err.tips = '设置用户标签失败'\n      throw err\n    })\n  }\n\n  updateChatRoomName (ChatRoomUserName, NewName) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'modtopic'\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomUserName,\n        NewTopic: NewName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('更新群名失败')\n    })\n  }\n\n  revokeMsg (msgId, toUserName) {\n    return Promise.resolve().then(() => {\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        SvrMsgId: msgId,\n        ToUserName: toUserName,\n        ClientMsgId: getClientMsgId()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxrevokemsg,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('撤回消息失败')\n    })\n  }\n\n  getBaseRequest () {\n    return {\n      Uin: parseInt(this.PROP.uin),\n      Sid: this.PROP.sid,\n      Skey: this.PROP.skey,\n      DeviceID: getDeviceID()\n    }\n  }\n}\n"]}