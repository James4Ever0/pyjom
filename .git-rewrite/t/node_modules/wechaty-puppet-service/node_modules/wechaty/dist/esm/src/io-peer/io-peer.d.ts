/// <reference path="../../../../src/io-peer/json-rpc-peer.d.ts" />
import jsonRpcPeer from 'json-rpc-peer';
declare const isJsonRpcRequest: (payload: jsonRpcPeer.JsonRpcPayload) => payload is jsonRpcPeer.JsonRpcPayloadRequest;
declare const isJsonRpcNotification: (payload: jsonRpcPeer.JsonRpcPayload) => payload is jsonRpcPeer.JsonRpcPayloadNotification;
declare const isJsonRpcResponse: (payload: jsonRpcPeer.JsonRpcPayload) => payload is jsonRpcPeer.JsonRpcPayloadResponse;
declare const isJsonRpcError: (payload: jsonRpcPeer.JsonRpcPayload) => payload is jsonRpcPeer.JsonRpcPayloadError;
interface IoPeerOptions {
    serviceGrpcPort: number;
}
declare const getPeer: (options: IoPeerOptions) => jsonRpcPeer.Peer;
export { getPeer, isJsonRpcError, isJsonRpcNotification, isJsonRpcRequest, isJsonRpcResponse, };
//# sourceMappingURL=io-peer.d.ts.map