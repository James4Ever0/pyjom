/**
 *   Wechaty Chatbot SDK - https://github.com/wechaty/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
import type * as PUPPET from 'wechaty-puppet';
import type { Constructor } from 'clone-class';
declare const LocationMixin_base: ((abstract new (...args: any[]) => {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    readonly wechaty: import("../wechaty/wechaty-impl.js").WechatyInterface;
}) & {
    new (): {};
};
declare class LocationMixin extends LocationMixin_base {
    readonly payload: PUPPET.payloads.Location;
    /**
     *
     * Create
     * @param poi string A point of interest (POI) is a specific point location that someone may find useful or interesting.
     *  See: https://en.wikipedia.org/wiki/Point_of_interest
     */
    static create(poi: string): Promise<LocationInterface>;
    constructor(payload: PUPPET.payloads.Location);
    toString(): string;
    address(): string;
    latitude(): number;
    longitude(): number;
    name(): string;
    accuracy(): number;
}
declare const LocationImpl_base: {
    new (...args: any[]): {};
    valid: (o: any) => o is LocationInterface;
    validInstance: (target: any) => target is LocationMixin;
    validInterface: (target: any) => target is LocationInterface;
} & typeof LocationMixin;
declare class LocationImpl extends LocationImpl_base {
}
interface LocationInterface extends LocationImpl {
}
declare type LocationConstructor = Constructor<LocationInterface, typeof LocationImpl>;
export type { LocationConstructor, LocationInterface, };
export { LocationImpl, };
//# sourceMappingURL=location.d.ts.map