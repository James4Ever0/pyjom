"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WechatyEventEmitter = void 0;
const events_1 = require("events");
const PUPPET = __importStar(require("wechaty-puppet"));
const WECHATY_EVENT_DICT = {
    ...PUPPET.types.CHAT_EVENT_DICT,
    dong: 'Should be emitted after we call `Wechaty.ding()`',
    error: "Will be emitted when there's an Error occurred.",
    heartbeat: 'Will be emitted periodically after the Wechaty started. If not, means that the Wechaty had died.',
    puppet: 'Will be emitted when the puppet has been set.',
    ready: 'All underlined data source are ready for use.',
    start: 'Will be emitted after the Wechaty had been started.',
    stop: 'Will be emitted after the Wechaty had been stopped.',
};
const WechatyEventEmitter = events_1.EventEmitter;
exports.WechatyEventEmitter = WechatyEventEmitter;
//# sourceMappingURL=wechaty-events.js.map