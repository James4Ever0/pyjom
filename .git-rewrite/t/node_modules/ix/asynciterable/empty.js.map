{"version":3,"sources":["asynciterable/empty.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAClD,8CAA+C;AAE/C,MAAM,kBAAmB,SAAQ,+BAAqB;IACpD,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAoB;QAChD,2BAAc,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;CACF;AAED;;;;;GAKG;AACH,SAAgB,KAAK;IACnB,OAAO,IAAI,kBAAkB,EAAE,CAAC;AAClC,CAAC;AAFD,sBAEC","file":"empty.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\nimport { throwIfAborted } from '../aborterror';\n\nclass EmptyAsyncIterable extends AsyncIterableX<never> {\n  async *[Symbol.asyncIterator](signal?: AbortSignal): AsyncIterator<never> {\n    throwIfAborted(signal);\n  }\n}\n\n/**\n * Returns an empty async-iterable sequence.\n *\n * @template TSource The type used for the async-iterable type parameter of the resulting sequence.\n * @returns {AsyncIterableX<never>} An async-iterable sequence with no elements.\n */\nexport function empty(): AsyncIterableX<never> {\n  return new EmptyAsyncIterable();\n}\n"]}