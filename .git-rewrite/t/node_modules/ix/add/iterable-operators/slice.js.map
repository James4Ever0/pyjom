{"version":3,"sources":["add/iterable-operators/slice.ts"],"names":[],"mappings":";;;AAAA,wDAAqD;AACrD,0DAAuD;AAEvD;;GAEG;AACH,SAAgB,UAAU,CAAwB,KAAa,EAAE,GAAW;IAC1E,OAAO,aAAK,CAAI,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC;AAFD,gCAEC;AAED,qBAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC","file":"slice.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { slice } from '../../iterable/operators/slice';\n\n/**\n * @ignore\n */\nexport function sliceProto<T>(this: IterableX<T>, begin: number, end: number): IterableX<T> {\n  return slice<T>(begin, end)(this);\n}\n\nIterableX.prototype.slice = sliceProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    slice: typeof sliceProto;\n  }\n}\n"]}