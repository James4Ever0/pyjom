{"version":3,"sources":["add/iterable-operators/take.ts"],"names":[],"mappings":";;;AAAA,wDAAqD;AACrD,wDAAqD;AAErD;;GAEG;AACH,SAAgB,SAAS,CAAwB,KAAa;IAC5D,OAAO,WAAI,CAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;AAC9B,CAAC;AAFD,8BAEC;AAED,qBAAS,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC","file":"take.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { take } from '../../iterable/operators/take';\n\n/**\n * @ignore\n */\nexport function takeProto<T>(this: IterableX<T>, count: number): IterableX<T> {\n  return take<T>(count)(this);\n}\n\nIterableX.prototype.take = takeProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    take: typeof takeProto;\n  }\n}\n"]}