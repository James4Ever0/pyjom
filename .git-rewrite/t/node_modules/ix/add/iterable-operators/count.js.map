{"version":3,"sources":["add/iterable-operators/count.ts"],"names":[],"mappings":";;;AAAA,wDAAqD;AACrD,gDAA6C;AAG7C;;GAEG;AACH,SAAgB,UAAU,CAAwB,OAAgC;IAChF,OAAO,aAAK,CAAI,IAAI,EAAE,OAAO,CAAC,CAAC;AACjC,CAAC;AAFD,gCAEC;AAED,qBAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC","file":"count.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { count } from '../../iterable/count';\nimport { OptionalFindOptions } from '../../iterable/findoptions';\n\n/**\n * @ignore\n */\nexport function countProto<T>(this: IterableX<T>, options?: OptionalFindOptions<T>): number {\n  return count<T>(this, options);\n}\n\nIterableX.prototype.count = countProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    count: typeof countProto;\n  }\n}\n"]}