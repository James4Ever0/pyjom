#!/usr/bin/env -S node --no-warnings --loader ts-node/esm
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = require("tstest");
const puppet_skeleton_js_1 = require("../puppet/puppet-skeleton.js");
const memory_mixin_js_1 = require("./memory-mixin.js");
(0, tstest_1.test)('ProtectedPropertyMemoryMixin', async (t) => {
    const noOneLeft = true;
    t.ok(noOneLeft, 'should match Mixin properties for every protected property');
});
(0, tstest_1.test)('MemoryMixin', async (t) => {
    const Test = class extends (0, memory_mixin_js_1.memoryMixin)(puppet_skeleton_js_1.PuppetSkeleton) {
    };
    const test = new Test();
    t.ok(test.memory, 'should has memory');
    t.notOk(test.memory.name, 'should has no memory name');
    const memoryGet = () => test.memory.get('test');
    await t.rejects(memoryGet, 'should reject get() before memory.load()');
    await test.start();
    await t.resolves(memoryGet, 'should resolve get() after memory.load()');
});
//# sourceMappingURL=memory-mixin.spec.js.map