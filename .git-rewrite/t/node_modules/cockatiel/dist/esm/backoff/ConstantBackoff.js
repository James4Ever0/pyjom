/**
 * Backoff that returns a constant interval.
 */
export class ConstantBackoff {
    constructor(interval, limit) {
        this.interval = interval;
        this.limit = limit;
    }
    /**
     * @inheritdoc
     */
    next() {
        return instance(this.interval, this.limit);
    }
}
/**
 * Backoff that never retries.
 */
export const NeverRetryBackoff = new ConstantBackoff(0, 0);
const instance = (interval, limit, index = 0) => ({
    duration: interval,
    next() {
        if (limit === undefined) {
            return this;
        }
        if (index >= limit - 1) {
            return undefined;
        }
        return instance(interval, limit, index + 1);
    },
});
//# sourceMappingURL=ConstantBackoff.js.map