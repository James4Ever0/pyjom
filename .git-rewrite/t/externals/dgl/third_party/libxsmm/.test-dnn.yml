script:
  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST ResNet-50 (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_resnet50.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_resnet50.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_resnet50.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST AlexNet (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_alexnet.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_alexnet.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_alexnet.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST Overfeat (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_overfeat.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_overfeat.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_overfeat.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST GoogleNet-v1 (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_googlenetv1.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_googlenetv1.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_googlenetv1.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST GoogleNet-v3 (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_googlenetv3.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_googlenetv3.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_googlenetv3.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST dcGAN (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_dcgan.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_dcgan.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_dcgan.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
        MB=$(echo ${MB_NT} | cut -d_ -f1);
        export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
        for PAD in 0 1; do
          echo; echo "--- TEST VGGa (format=${FORMAT} pad=${PAD} mb=${MB} nt=${OMP_NUM_THREADS})";
          ./run_vgga.sh ${MB} ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
          ./run_vgga.sh ${MB} ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
          ./run_vgga.sh ${MB} ${ITERS} -1 f32 U ${FORMAT} ${PAD};
        done
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export OMP_NUM_THREADS=$(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}" | cut -d_ -f1; else echo "0"; fi);
    export CHECK=1 ITERS=1;
    for FORMAT in $(if [ "" != "${FORMATS}" ]; then echo "${FORMATS}"; else echo "L"; fi); do
      for PAD in 0 1; do
        echo; echo "--- TEST DeepBench (format=${FORMAT} pad=${PAD})";
        ./run_deepbench.sh ${ITERS} -1 f32 F ${FORMAT} ${PAD} &&
        ./run_deepbench.sh ${ITERS} -1 f32 B ${FORMAT} ${PAD} &&
        ./run_deepbench.sh ${ITERS} -1 f32 U ${FORMAT} ${PAD};
      done
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (echo; echo "--- TEST Quicktest";
    for MB_NT in $(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}"; else echo "32_0"; fi); do
      MB=$(echo ${MB_NT} | cut -d_ -f1);
      export OMP_NUM_THREADS=$(echo ${MB_NT} | cut -d_ -f2);
      ./layer_example_f32 1 299 299 ${MB}   3  32 3 3 0 0 2 U T 1 &&
      ./layer_example_f32 1  13  13 ${MB} 192 384 3 3 1 1 1 B L 1;
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export OMP_NUM_THREADS=$(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}" | cut -d_ -f1; else echo "0"; fi);
    export CHECK=1 CHECK_SCALE=1 ITERS=1 MB=${OMP_NUM_THREADS};
    for KIND in F B U; do
      echo; echo "--- TEST ResNet-50 (precision=bf16 kind=${KIND} mb=${MB} nt=${OMP_NUM_THREADS})";
      ./run_resnet50.sh ${MB} ${ITERS} -1 bf16 ${KIND} L 1;
    done)

  - make -e ${MAKEJ} && cd samples/deeplearning/cnnlayer && make -e ${MAKEJ} &&
   (export OMP_NUM_THREADS=$(if [ "" != "${MB_THREADS}" ]; then echo "${MB_THREADS}" | cut -d_ -f1; else echo "0"; fi);
    export CHECK=1 CHECK_SCALE=1 ITERS=1 MB=${OMP_NUM_THREADS};
    for KIND in F B U; do
      echo; echo "--- TEST ResNet-50 (precision=bf16 kind=${KIND} mb=${MB} nt=${OMP_NUM_THREADS})";
      ./run_resnet50_mock.sh ${MB} ${ITERS} -1 bf16 ${KIND} L 1;
    done)
