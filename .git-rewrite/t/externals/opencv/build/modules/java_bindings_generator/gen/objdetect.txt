PORTED FUNCs LIST (73 of 78):

  cv::CascadeClassifier::CascadeClassifier()
  cv::CascadeClassifier::CascadeClassifier(String filename)
 bool cv::CascadeClassifier::empty()
 bool cv::CascadeClassifier::load(String filename)
 void cv::CascadeClassifier::detectMultiScale(Mat image, vector_Rect& objects, double scaleFactor = 1.1, int minNeighbors = 3, int flags = 0, Size minSize = Size(), Size maxSize = Size())
 void cv::CascadeClassifier::detectMultiScale(Mat image, vector_Rect& objects, vector_int& numDetections, double scaleFactor = 1.1, int minNeighbors = 3, int flags = 0, Size minSize = Size(), Size maxSize = Size())
 void cv::CascadeClassifier::detectMultiScale(Mat image, vector_Rect& objects, vector_int& rejectLevels, vector_double& levelWeights, double scaleFactor = 1.1, int minNeighbors = 3, int flags = 0, Size minSize = Size(), Size maxSize = Size(), bool outputRejectLevels = false)
 bool cv::CascadeClassifier::isOldFormatCascade()
 Size cv::CascadeClassifier::getOriginalWindowSize()
 int cv::CascadeClassifier::getFeatureType()
static bool cv::CascadeClassifier::convert(String oldcascade, String newcascade)
 void cv::FaceDetectorYN::setInputSize(Size input_size)
 Size cv::FaceDetectorYN::getInputSize()
 void cv::FaceDetectorYN::setScoreThreshold(float score_threshold)
 float cv::FaceDetectorYN::getScoreThreshold()
 void cv::FaceDetectorYN::setNMSThreshold(float nms_threshold)
 float cv::FaceDetectorYN::getNMSThreshold()
 void cv::FaceDetectorYN::setTopK(int top_k)
 int cv::FaceDetectorYN::getTopK()
 int cv::FaceDetectorYN::detect(Mat image, Mat& faces)
static Ptr_FaceDetectorYN cv::FaceDetectorYN::create(String model, String config, Size input_size, float score_threshold = 0.9f, float nms_threshold = 0.3f, int top_k = 5000, int backend_id = 0, int target_id = 0)
 void cv::FaceRecognizerSF::alignCrop(Mat src_img, Mat face_box, Mat& aligned_img)
 void cv::FaceRecognizerSF::feature(Mat aligned_img, Mat& face_feature)
 double cv::FaceRecognizerSF::match(Mat face_feature1, Mat face_feature2, int dis_type = FaceRecognizerSF::FR_COSINE)
static Ptr_FaceRecognizerSF cv::FaceRecognizerSF::create(String model, String config, int backend_id = 0, int target_id = 0)
  cv::HOGDescriptor::HOGDescriptor()
  cv::HOGDescriptor::HOGDescriptor(Size _winSize, Size _blockSize, Size _blockStride, Size _cellSize, int _nbins, int _derivAperture = 1, double _winSigma = -1, HOGDescriptor_HistogramNormType _histogramNormType = HOGDescriptor::L2Hys, double _L2HysThreshold = 0.2, bool _gammaCorrection = false, int _nlevels = HOGDescriptor::DEFAULT_NLEVELS, bool _signedGradient = false)
  cv::HOGDescriptor::HOGDescriptor(String filename)
 size_t cv::HOGDescriptor::getDescriptorSize()
 bool cv::HOGDescriptor::checkDetectorSize()
 double cv::HOGDescriptor::getWinSigma()
 void cv::HOGDescriptor::setSVMDetector(Mat svmdetector)
 bool cv::HOGDescriptor::load(String filename, String objname = String())
 void cv::HOGDescriptor::save(String filename, String objname = String())
 void cv::HOGDescriptor::compute(Mat img, vector_float& descriptors, Size winStride = Size(), Size padding = Size(), vector_Point locations = std::vector<Point>())
 void cv::HOGDescriptor::detect(Mat img, vector_Point& foundLocations, vector_double& weights, double hitThreshold = 0, Size winStride = Size(), Size padding = Size(), vector_Point searchLocations = std::vector<Point>())
 void cv::HOGDescriptor::detectMultiScale(Mat img, vector_Rect& foundLocations, vector_double& foundWeights, double hitThreshold = 0, Size winStride = Size(), Size padding = Size(), double scale = 1.05, double groupThreshold = 2.0, bool useMeanshiftGrouping = false)
 void cv::HOGDescriptor::computeGradient(Mat img, Mat& grad, Mat& angleOfs, Size paddingTL = Size(), Size paddingBR = Size())
static vector_float cv::HOGDescriptor::getDefaultPeopleDetector()
static vector_float cv::HOGDescriptor::getDaimlerPeopleDetector()
Size HOGDescriptor::winSize
Size HOGDescriptor::blockSize
Size HOGDescriptor::blockStride
Size HOGDescriptor::cellSize
int HOGDescriptor::nbins
int HOGDescriptor::derivAperture
double HOGDescriptor::winSigma
HOGDescriptor_HistogramNormType HOGDescriptor::histogramNormType
double HOGDescriptor::L2HysThreshold
bool HOGDescriptor::gammaCorrection
vector_float HOGDescriptor::svmDetector
int HOGDescriptor::nlevels
bool HOGDescriptor::signedGradient
 void cv::groupRectangles(vector_Rect& rectList, vector_int& weights, int groupThreshold, double eps = 0.2)
  cv::QRCodeDetector::QRCodeDetector()
 void cv::QRCodeDetector::setEpsX(double epsX)
 void cv::QRCodeDetector::setEpsY(double epsY)
 bool cv::QRCodeDetector::detect(Mat img, Mat& points)
 string cv::QRCodeDetector::decode(Mat img, Mat points, Mat& straight_qrcode = Mat())
 String cv::QRCodeDetector::decodeCurved(Mat img, Mat points, Mat& straight_qrcode = Mat())
 string cv::QRCodeDetector::detectAndDecode(Mat img, Mat& points = Mat(), Mat& straight_qrcode = Mat())
 string cv::QRCodeDetector::detectAndDecodeCurved(Mat img, Mat& points = Mat(), Mat& straight_qrcode = Mat())
 bool cv::QRCodeDetector::detectMulti(Mat img, Mat& points)
 bool cv::QRCodeDetector::decodeMulti(Mat img, Mat points, vector_string& decoded_info, vector_Mat& straight_qrcode = vector_Mat())
 bool cv::QRCodeDetector::detectAndDecodeMulti(Mat img, vector_string& decoded_info, Mat& points = Mat(), vector_Mat& straight_qrcode = vector_Mat())
static Ptr_QRCodeEncoder cv::QRCodeEncoder::create(QRCodeEncoder_Params parameters = QRCodeEncoder::Params())
 void cv::QRCodeEncoder::encode(String encoded_info, Mat& qrcode)
 void cv::QRCodeEncoder::encodeStructuredAppend(String encoded_info, vector_Mat& qrcodes)
  cv::QRCodeEncoder::Params::Params()
int QRCodeEncoder_Params::version
void QRCodeEncoder_Params::version
int QRCodeEncoder_Params::structure_number
void QRCodeEncoder_Params::structure_number

SKIPPED FUNCs LIST (5 of 78):

 bool cv::CascadeClassifier::read(FileNode node)
// Unknown type 'FileNode' (I), skipping the function

CorrectionLevel QRCodeEncoder_Params::correction_level
// Return type 'CorrectionLevel' is not supported, skipping the function

void QRCodeEncoder_Params::correction_level
// Unknown type 'CorrectionLevel' (I), skipping the function

EncodeMode QRCodeEncoder_Params::mode
// Return type 'EncodeMode' is not supported, skipping the function

void QRCodeEncoder_Params::mode
// Unknown type 'EncodeMode' (I), skipping the function


0 def args - 36 funcs
1 def args - 8 funcs
2 def args - 5 funcs
3 def args - 1 funcs
4 def args - 1 funcs
5 def args - 3 funcs
6 def args - 2 funcs
7 def args - 1 funcs