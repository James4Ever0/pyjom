import { log, } from '../config.js';
import { StorageBackend, } from './backend.js';
class StorageNop extends StorageBackend {
    constructor(name, options) {
        log.verbose('StorageNop', 'constructor(%s, ...)', name);
        super(name, options);
    }
    toString() {
        const text = [
            this.constructor.name,
            '<nop>',
        ].join('');
        return text;
    }
    async load() {
        log.verbose('StorageNop', 'load()');
        return {};
    }
    async save(_ /* payload */) {
        log.verbose('StorageNop', 'save()');
    }
    async destroy() {
        log.verbose('StorageNop', 'destroy()');
    }
}
export default StorageNop;
export { StorageNop, };
//# sourceMappingURL=nop.js.map