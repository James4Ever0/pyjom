import type { Duck } from './duck.js';
export interface MapObject {
    [key: string]: any;
}
/**
 * Huan(202005) TODO:
 *  Testing static types in TypeScript
 *    https://2ality.com/2019/07/testing-static-types.html
 *
 * use tsd? tsdlint?
 *
 * To be added in the future:
 *  1. check selectors take a state as argument and returns a function
 *  2. check operations take a store as argument and returns a function
 *  3. Conditional Type Checks - https://github.com/dsherret/conditional-type-checks
 */
declare function validateDuck<D extends Duck>(duck: D, debug?: boolean): void;
export { validateDuck, };
//# sourceMappingURL=validate-duck.d.ts.map