import type * as PUPPET from 'wechaty-puppet';
/**
 * @private Registry Actions Creators
 */
export declare const REGISTER_PUPPET_COMMAND: (puppetId: string) => import("typesafe-actions").PayloadAction<"wechaty-redux/REGISTER_PUPPET_COMMAND", {
    puppetId: string;
}>;
export declare const DEREGISTER_PUPPET_COMMAND: (puppetId: string) => import("typesafe-actions").PayloadAction<"wechaty-redux/DEREGISTER_PUPPET_COMMAND", {
    puppetId: string;
}>;
export declare const REGISTER_WECHATY_COMMAND: (wechatyId: string) => import("typesafe-actions").PayloadAction<"wechaty-redux/REGISTER_WECHATY_COMMAND", {
    wechatyId: string;
}>;
export declare const DEREGISTER_WECHATY_COMMAND: (wechatyId: string) => import("typesafe-actions").PayloadAction<"wechaty-redux/DEREGISTER_WECHATY_COMMAND", {
    wechatyId: string;
}>;
export declare const BIND_WECHATY_PUPPET_COMMAND: (options: {
    wechatyId: string;
    puppetId: string;
}) => import("typesafe-actions").PayloadAction<"wechaty-redux/BIND_WECHATY_PUPPET_COMMAND", {
    wechatyId: string;
    puppetId: string;
}>;
export declare const UNBIND_WECHATY_PUPPET_COMMAND: (options: {
    wechatyId: string;
    puppetId: string;
}) => import("typesafe-actions").PayloadAction<"wechaty-redux/UNBIND_WECHATY_PUPPET_COMMAND", {
    wechatyId: string;
    puppetId: string;
}>;
/**
 * Actions: StateState
 */
export declare const STATE_ACTIVATED_EVENT: (_puppetId: string, state: true | "pending") => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/STATE_ACTIVATED_EVENT", {
    state: true | "pending";
}, {
    puppetId: string;
}>;
export declare const STATE_INACTIVATED_EVENT: (_puppetId: string, state: true | "pending") => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/STATE_INACTIVATED_EVENT", {
    state: true | "pending";
}, {
    puppetId: string;
}>;
export declare const STARTED_EVENT: (puppetId: string) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/STARTED_EVENT", {
    puppetId: string;
}, {
    puppetId: string;
}>;
export declare const STOPPED_EVENT: (puppetId: string) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/STOPPED_EVENT", {
    puppetId: string;
}, {
    puppetId: string;
}>;
/**
 * Actions: Pure Events
 */
export declare const DONG_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventDong) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/DONG_RECEIVED_EVENT", PUPPET.payloads.EventDong, {
    puppetId: string;
}>;
export declare const ERROR_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventError) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/ERROR_RECEIVED_EVENT", PUPPET.payloads.EventError, {
    puppetId: string;
}>;
export declare const FRIENDSHIP_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventFriendship) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/FRIENDSHIP_RECEIVED_EVENT", PUPPET.payloads.EventFriendship, {
    puppetId: string;
}>;
export declare const HEARTBEAT_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventHeartbeat) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/HEARTBEAT_RECEIVED_EVENT", PUPPET.payloads.EventHeartbeat, {
    puppetId: string;
}>;
export declare const LOGIN_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventLogin) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/LOGIN_RECEIVED_EVENT", PUPPET.payloads.EventLogin, {
    puppetId: string;
}>;
export declare const LOGOUT_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventLogout) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/LOGOUT_RECEIVED_EVENT", PUPPET.payloads.EventLogout, {
    puppetId: string;
}>;
export declare const MESSAGE_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventMessage) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/MESSAGE_RECEIVED_EVENT", PUPPET.payloads.EventMessage, {
    puppetId: string;
}>;
export declare const READY_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventReady) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/READY_RECEIVED_EVENT", PUPPET.payloads.EventReady, {
    puppetId: string;
}>;
export declare const RESET_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventReset) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/RESET_RECEIVED_EVENT", PUPPET.payloads.EventReset, {
    puppetId: string;
}>;
export declare const ROOM_INVITE_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventRoomInvite) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/ROOM_INVITE_RECEIVED_EVENT", PUPPET.payloads.EventRoomInvite, {
    puppetId: string;
}>;
export declare const ROOM_JOIN_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventRoomJoin) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/ROOM_JOIN_RECEIVED_EVENT", PUPPET.payloads.EventRoomJoin, {
    puppetId: string;
}>;
export declare const ROOM_LEAVE_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventRoomLeave) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/ROOM_LEAVE_RECEIVED_EVENT", PUPPET.payloads.EventRoomLeave, {
    puppetId: string;
}>;
export declare const ROOM_TOPIC_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventRoomTopic) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/ROOM_TOPIC_RECEIVED_EVENT", PUPPET.payloads.EventRoomTopic, {
    puppetId: string;
}>;
export declare const SCAN_RECEIVED_EVENT: (_puppetId: string, payload: PUPPET.payloads.EventScan) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/SCAN_RECEIVED_EVENT", PUPPET.payloads.EventScan, {
    puppetId: string;
}>;
export declare const DING_COMMAND: (_puppetId: string, data?: string | undefined) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/DING_COMMAND", {
    data: string | undefined;
}, {
    puppetId: string;
}>;
export declare const RESET_COMMAND: (_puppetId: string, data?: string | undefined) => import("typesafe-actions").PayloadMetaAction<"wechaty-redux/RESET_COMMAND", {
    data: string | undefined;
}, {
    puppetId: string;
}>;
/**
 * @private Bug compatible & workaround for Ducks API
 *  https://github.com/huan/ducks/issues/2
 */
export declare const NOP_COMMAND: import("typesafe-actions").EmptyActionCreator<"wechaty-redux/NOP_COMMAND">;
//# sourceMappingURL=actions.d.ts.map