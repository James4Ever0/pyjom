"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePuppet = exports.PuppetSkeleton = exports.Puppet = void 0;
/**
 * Huan(202110): Issue #168 - ReferenceError: Cannot access 'Puppet' before initialization
 *  @see https://github.com/wechaty/puppet/issues/168
 *
 * We need to import `interface-of.js` before import `puppet-abstract.js`
 *  or we will get the following error message:
 *
 * ReferenceError: Cannot access 'Puppet' before initialization
    at file:///home/huan/git/wechaty/puppet/src/puppet/interface-of.ts:23:48
    at ModuleJob.run (node:internal/modules/esm/module_job:175:25)
    at async Loader.import (node:internal/modules/esm/loader:178:24)
    at async Object.loadESM (node:internal/process/esm_loader:68:5)

 * This is due to the circler dependence, the deeper reason is still not clear.
 */
require("./interface-of.js");
const puppet_skeleton_js_1 = require("./puppet-skeleton.js");
Object.defineProperty(exports, "PuppetSkeleton", { enumerable: true, get: function () { return puppet_skeleton_js_1.PuppetSkeleton; } });
const puppet_abstract_js_1 = require("./puppet-abstract.js");
Object.defineProperty(exports, "Puppet", { enumerable: true, get: function () { return puppet_abstract_js_1.Puppet; } });
const puppet_resolver_js_1 = require("./puppet-resolver.js");
Object.defineProperty(exports, "resolvePuppet", { enumerable: true, get: function () { return puppet_resolver_js_1.resolvePuppet; } });
//# sourceMappingURL=mod.js.map