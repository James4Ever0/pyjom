declare const token: Partial<import("cmd-ts/dist/cjs/argparser").Register> & {
    parse(context: import("cmd-ts/dist/cjs/argparser").ParseContext): Promise<import("cmd-ts/dist/cjs/argparser").ParsingResult<{
        command: "discover";
        args: {
            token: string;
        };
    } | {
        command: "generate";
        args: {
            type: string | undefined;
        };
    }>>;
} & import("cmd-ts/dist/cjs/helpdoc").Named & Partial<import("cmd-ts/dist/cjs/helpdoc").Descriptive & import("cmd-ts/dist/cjs/helpdoc").Versioned> & import("cmd-ts/dist/cjs/helpdoc").PrintHelp & Partial<import("cmd-ts/dist/cjs/helpdoc").Versioned> & import("cmd-ts/dist/cjs/argparser").Register & import("cmd-ts/dist/cjs/runner").Handling<{
    command: "discover";
    args: {
        token: string;
    };
} | {
    command: "generate";
    args: {
        type: string | undefined;
    };
}, {
    command: "discover";
    value: Promise<void>;
} | {
    command: "generate";
    value: Promise<void>;
}> & {
    run(context: import("cmd-ts/dist/cjs/argparser").ParseContext): Promise<import("cmd-ts/dist/cjs/argparser").ParsingResult<{
        command: "discover";
        value: Promise<void>;
    } | {
        command: "generate";
        value: Promise<void>;
    }>>;
};
export { token };
//# sourceMappingURL=token.d.ts.map