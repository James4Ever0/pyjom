"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageImpl = void 0;
/**
 *   Wechaty Chatbot SDK - https://github.com/wechaty/wechaty
 *
 *   @copyright 2016 Huan LI (李卓桓) <https://github.com/huan>, and
 *                   Wechaty Contributors <https://github.com/wechaty>.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
const PUPPET = __importStar(require("wechaty-puppet"));
const validation_js_1 = require("../user-mixins/validation.js");
const config_js_1 = require("../config.js");
const wechatify_js_1 = require("../user-mixins/wechatify.js");
class ImageMixin extends (0, wechatify_js_1.wechatifyMixinBase)() {
    id;
    static create(id) {
        config_js_1.log.verbose('Image', 'static create(%s)', id);
        const image = new this(id);
        return image;
    }
    constructor(id) {
        super();
        this.id = id;
        config_js_1.log.verbose('Image', 'constructor(%s)', id);
    }
    async thumbnail() {
        config_js_1.log.verbose('Image', 'thumbnail() for id: "%s"', this.id);
        const fileBox = await this.wechaty.puppet.messageImage(this.id, PUPPET.types.Image.Thumbnail);
        return fileBox;
    }
    async hd() {
        config_js_1.log.verbose('Image', 'hd() for id: "%s"', this.id);
        const fileBox = await this.wechaty.puppet.messageImage(this.id, PUPPET.types.Image.HD);
        return fileBox;
    }
    async artwork() {
        config_js_1.log.verbose('Image', 'artwork() for id: "%s"', this.id);
        const fileBox = await this.wechaty.puppet.messageImage(this.id, PUPPET.types.Image.Artwork);
        return fileBox;
    }
}
class ImageImpl extends (0, validation_js_1.validationMixin)(ImageMixin)() {
}
exports.ImageImpl = ImageImpl;
//# sourceMappingURL=image.js.map