{"version":3,"sources":["asynciterable/operators/timeout.ts"],"names":[],"mappings":"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","file":"timeout.js","sourcesContent":["import { AsyncIterableX } from '../asynciterablex';\nimport { sleep } from '../_sleep';\nimport { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { wrapWithAbort } from './withabort';\nimport { throwIfAborted } from '../../aborterror';\nimport { isObject } from '../../util/isiterable';\nimport { safeRace } from '../../util/safeRace';\n\nexport class TimeoutError extends Error {\n  constructor(message = 'Timeout has occurred') {\n    super(message);\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n    Error.captureStackTrace(this, this.constructor);\n    this.name = 'TimeoutError';\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TimeoutError';\n  }\n}\n\nObject.defineProperty(TimeoutError, Symbol.hasInstance, {\n  writable: true,\n  configurable: true,\n  value(x: any) {\n    return (\n      isObject(x) &&\n      (x.constructor.name === 'TimeoutError' || x[Symbol.toStringTag] === 'TimeoutError')\n    );\n  },\n});\n\nconst VALUE_TYPE = 'value';\nconst ERROR_TYPE = 'error';\n\ninterface TimeoutOperation<T> {\n  type: string;\n  value?: IteratorResult<T>;\n}\n\nexport class TimeoutAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _dueTime: number;\n\n  constructor(source: AsyncIterable<TSource>, dueTime: number) {\n    super();\n    this._source = source;\n    this._dueTime = dueTime;\n  }\n\n  async *[Symbol.asyncIterator](signal?: AbortSignal) {\n    throwIfAborted(signal);\n    const it = wrapWithAbort(this._source, signal)[Symbol.asyncIterator]();\n    while (1) {\n      const { type, value } = await safeRace<TimeoutOperation<TSource>>([\n        it.next().then((val) => {\n          return { type: VALUE_TYPE, value: val };\n        }),\n        sleep(this._dueTime, signal).then(() => {\n          return { type: ERROR_TYPE };\n        }),\n      ]);\n\n      if (type === ERROR_TYPE) {\n        throw new TimeoutError();\n      }\n\n      if (!value || value.done) {\n        break;\n      }\n      yield value.value;\n    }\n  }\n}\n\n/**\n * Applies a timeout policy for each element in the async-iterable sequence.\n * If the next element isn't received within the specified timeout duration starting from its predecessor, a TimeoutError is thrown.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {number} dueTime Maximum duration in milliseconds between values before a timeout occurs.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} The source sequence with a TimeoutError in case of a timeout.\n */\nexport function timeout<TSource>(dueTime: number): MonoTypeOperatorAsyncFunction<TSource> {\n  return function timeoutOperatorFunction(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n    return new TimeoutAsyncIterable<TSource>(source, dueTime);\n  };\n}\n"]}