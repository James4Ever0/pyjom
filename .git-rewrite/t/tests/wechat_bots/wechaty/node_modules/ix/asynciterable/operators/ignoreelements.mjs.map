{"version":3,"sources":["asynciterable/operators/ignoreelements.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,OAAO,2BAAqC,SAAQ,cAAuB;IACvE,OAAO,CAAyB;IAExC,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAoB;QAChD,cAAc,CAAC,MAAM,CAAC,CAAC;QACvB,oCAAoC;QACpC,IAAI,KAAK,EAAE,MAAM,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE;SAC1D;IACH,CAAC;CACF;AAED;;;;;;GAMG;AACH,MAAM,UAAU,cAAc;IAC5B,OAAO,SAAS,8BAA8B,CAC5C,MAA8B;QAE9B,OAAO,IAAI,2BAA2B,CAAU,MAAM,CAAC,CAAC;IAC1D,CAAC,CAAC;AACJ,CAAC","file":"ignoreelements.js","sourcesContent":["import { AsyncIterableX } from '../asynciterablex';\nimport { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { wrapWithAbort } from './withabort';\nimport { throwIfAborted } from '../../aborterror';\n\nexport class IgnoreElementsAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator](signal?: AbortSignal): AsyncIterator<TSource> {\n    throwIfAborted(signal);\n    // eslint-disable-next-line no-empty\n    for await (const _ of wrapWithAbort(this._source, signal)) {\n    }\n  }\n}\n\n/**\n * Ignores all elements in an async-iterable sequence leaving only the termination messages.\n *\n * @template TSource The type of the elements in the source sequence\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} An operator that returns an empty async-iterable sequence\n * that signals termination, successful or exceptional, of the source sequence.\n */\nexport function ignoreElements<TSource>(): MonoTypeOperatorAsyncFunction<TSource> {\n  return function ignoreElementsOperatorFunction(\n    source: AsyncIterable<TSource>\n  ): AsyncIterableX<TSource> {\n    return new IgnoreElementsAsyncIterable<TSource>(source);\n  };\n}\n"]}