{"version":3,"sources":["asynciterable/operators/reverse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,OAAO,oBAA8B,SAAQ,cAAuB;IAChE,OAAO,CAAyB;IAExC,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAoB;QAChD,cAAc,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,OAAO,GAAG,EAAe,CAAC;QAChC,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE;YAC5D,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,KAAK,CAAC,CAAC,OAAO,CAAC;IACjB,CAAC;CACF;AAED;;;;;GAKG;AACH,MAAM,UAAU,OAAO;IACrB,OAAO,SAAS,uBAAuB,CAAC,MAA8B;QACpE,OAAO,IAAI,oBAAoB,CAAU,MAAM,CAAC,CAAC;IACnD,CAAC,CAAC;AACJ,CAAC","file":"reverse.js","sourcesContent":["import { AsyncIterableX } from '../asynciterablex';\nimport { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { wrapWithAbort } from './withabort';\nimport { throwIfAborted } from '../../aborterror';\n\nexport class ReverseAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator](signal?: AbortSignal) {\n    throwIfAborted(signal);\n    const results = [] as TSource[];\n    for await (const item of wrapWithAbort(this._source, signal)) {\n      results.unshift(item);\n    }\n    yield* results;\n  }\n}\n\n/**\n * Reverses the async-iterable instance.\n *\n * @template TSource The type of the elements in the source sequence.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} The async-iterable in reversed sequence.\n */\nexport function reverse<TSource>(): MonoTypeOperatorAsyncFunction<TSource> {\n  return function reverseOperatorFunction(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n    return new ReverseAsyncIterable<TSource>(source);\n  };\n}\n"]}