{"version":3,"sources":["asynciterable/never.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAClD,8CAA2D;AAE3D,MAAa,kBAAmB,SAAQ,+BAAqB;IAC3D;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAoB;QAChD,2BAAc,CAAC,MAAM,CAAC,CAAC;QACvB,MAAM,IAAI,OAAO,CAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,uBAAU,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;aAClF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAbD,gDAaC;AAED;;;;GAIG;AACH,SAAgB,KAAK;IACnB,OAAO,IAAI,kBAAkB,EAAE,CAAC;AAClC,CAAC;AAFD,sBAEC","file":"never.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\nimport { throwIfAborted, AbortError } from '../aborterror';\n\nexport class NeverAsyncIterable extends AsyncIterableX<never> {\n  constructor() {\n    super();\n  }\n\n  async *[Symbol.asyncIterator](signal?: AbortSignal) {\n    throwIfAborted(signal);\n    await new Promise<never>((_, reject) => {\n      if (signal) {\n        signal.addEventListener('abort', () => reject(new AbortError()), { once: true });\n      }\n    });\n  }\n}\n\n/**\n * An async-iterable sequence that never returns a value.\n *\n * @returns {AsyncIterableX<never>} An async-iterable sequence that never returns a value.\n */\nexport function never(): AsyncIterableX<never> {\n  return new NeverAsyncIterable();\n}\n"]}