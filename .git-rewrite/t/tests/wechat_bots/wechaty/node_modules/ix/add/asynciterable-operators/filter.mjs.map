{"version":3,"sources":["add/asynciterable-operators/filter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAe3E,MAAM,UAAU,WAAW,CAEzB,SAAwF,EACxF,OAAa;IAEb,OAAO,IAAI,mBAAmB,CAAI,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9D,CAAC;AAED,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"filter.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { FilterAsyncIterable } from '../../asynciterable/operators/filter';\n\n/**\n * @ignore\n */\nexport function filterProto<T, S extends T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number, signal?: AbortSignal) => value is S,\n  thisArg?: any\n): AsyncIterableX<S>;\nexport function filterProto<T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number, signal?: AbortSignal) => boolean | Promise<boolean>,\n  thisArg?: any\n): AsyncIterableX<T>;\nexport function filterProto<T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number, signal?: AbortSignal) => boolean | Promise<boolean>,\n  thisArg?: any\n): AsyncIterableX<T> {\n  return new FilterAsyncIterable<T>(this, predicate, thisArg);\n}\n\nAsyncIterableX.prototype.filter = filterProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    filter: typeof filterProto;\n  }\n}\n"]}