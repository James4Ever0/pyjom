/**
 * Resolves an existing path. Produces an error when path does not exist.
 * When provided a relative path, extends it using the current working directory.
 */
export declare const ExistingPath: Omit<import("..").Type<string, string>, "from" | "defaultValue"> & Omit<{
    displayName: string;
    description: string;
    from(str: string): Promise<string>;
}, "from"> & import("../from").From<string, string>;
/**
 * Resolves to a directory if given one, and to a file's directory if file was given.
 * Fails when the directory or the given file does not exist.
 */
export declare const Directory: Omit<Omit<import("..").Type<string, string>, "from" | "defaultValue"> & Omit<{
    displayName: string;
    description: string;
    from(str: string): Promise<string>;
}, "from"> & import("../from").From<string, string>, "from" | "defaultValue"> & Omit<{
    from(resolved: string): Promise<string>;
    displayName: string;
    description: string;
}, "from"> & import("../from").From<string, string>;
/**
 * Resolves to a path to an existing file
 */
export declare const File: Omit<Omit<import("..").Type<string, string>, "from" | "defaultValue"> & Omit<{
    displayName: string;
    description: string;
    from(str: string): Promise<string>;
}, "from"> & import("../from").From<string, string>, "from" | "defaultValue"> & Omit<{
    from(resolved: string): Promise<string>;
    displayName: string;
    description: string;
}, "from"> & import("../from").From<string, string>;
