#!/usr/bin/env -S node --no-warnings --loader ts-node/esm
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = require("tstest");
const fixture_class_js_1 = require("../tests/fixtures/fixture-class.js");
const clone_class_js_1 = require("./clone-class.js");
const instance_to_class_js_1 = require("./instance-to-class.js");
(0, tstest_1.test)('instanceToClass smoke testing', async (t) => {
    const instance = new fixture_class_js_1.FixtureClass(1, 2);
    const SameFixtureClass = (0, instance_to_class_js_1.instanceToClass)(instance, fixture_class_js_1.FixtureClass);
    t.equal(SameFixtureClass, fixture_class_js_1.FixtureClass, 'should get back the same Class for its own instance');
});
(0, tstest_1.test)('instanceToClass work with extended class', async (t) => {
    class ChildFixtureClass extends fixture_class_js_1.FixtureClass {
    }
    const anotherInstance = new ChildFixtureClass(3, 4);
    const SameChildFixtureClass = (0, instance_to_class_js_1.instanceToClass)(anotherInstance, fixture_class_js_1.FixtureClass);
    t.equal(SameChildFixtureClass, ChildFixtureClass, 'should get back ChildFixtureClass for instance from its child class');
});
(0, tstest_1.test)('instanceToClass work with cloneClass', async (t) => {
    const ChildFixtureClass = (0, clone_class_js_1.cloneClass)(fixture_class_js_1.FixtureClass);
    ChildFixtureClass.n = 42;
    const anotherInstance = new ChildFixtureClass(3, 4);
    const SameChildFixtureClass = (0, instance_to_class_js_1.instanceToClass)(anotherInstance, fixture_class_js_1.FixtureClass);
    t.equal(SameChildFixtureClass, ChildFixtureClass, 'should get back ChildFixtureClass for instance from its child class');
    t.equal(SameChildFixtureClass.n, 42, 'should get exactly the class with 42');
    t.equal(fixture_class_js_1.FixtureClass.n, undefined, 'should has not affect the original class');
});
//# sourceMappingURL=instance-to-class.spec.js.map