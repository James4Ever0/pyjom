// package: wechaty.puppet
// file: wechaty/puppet/friendship.proto

import * as jspb from "google-protobuf";
import * as google_protobuf_wrappers_pb from "google-protobuf/google/protobuf/wrappers_pb";
import * as wechaty_puppet_referrer_pb from "../../wechaty/puppet/referrer_pb";

export class FriendshipPayloadRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  hasPayloadStringValueDeprecated(): boolean;
  clearPayloadStringValueDeprecated(): void;
  getPayloadStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setPayloadStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getPayload(): string;
  setPayload(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipPayloadRequest.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipPayloadRequest): FriendshipPayloadRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipPayloadRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipPayloadRequest;
  static deserializeBinaryFromReader(message: FriendshipPayloadRequest, reader: jspb.BinaryReader): FriendshipPayloadRequest;
}

export namespace FriendshipPayloadRequest {
  export type AsObject = {
    id: string,
    payloadStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    payload: string,
  }
}

export class FriendshipPayloadResponse extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getContactId(): string;
  setContactId(value: string): void;

  getHello(): string;
  setHello(value: string): void;

  getType(): FriendshipTypeMap[keyof FriendshipTypeMap];
  setType(value: FriendshipTypeMap[keyof FriendshipTypeMap]): void;

  getStranger(): string;
  setStranger(value: string): void;

  getTicket(): string;
  setTicket(value: string): void;

  getScene(): FriendshipSceneTypeMap[keyof FriendshipSceneTypeMap];
  setScene(value: FriendshipSceneTypeMap[keyof FriendshipSceneTypeMap]): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipPayloadResponse.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipPayloadResponse): FriendshipPayloadResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipPayloadResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipPayloadResponse;
  static deserializeBinaryFromReader(message: FriendshipPayloadResponse, reader: jspb.BinaryReader): FriendshipPayloadResponse;
}

export namespace FriendshipPayloadResponse {
  export type AsObject = {
    id: string,
    contactId: string,
    hello: string,
    type: FriendshipTypeMap[keyof FriendshipTypeMap],
    stranger: string,
    ticket: string,
    scene: FriendshipSceneTypeMap[keyof FriendshipSceneTypeMap],
  }
}

export class FriendshipSearchPhoneRequest extends jspb.Message {
  getPhone(): string;
  setPhone(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipSearchPhoneRequest.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipSearchPhoneRequest): FriendshipSearchPhoneRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipSearchPhoneRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipSearchPhoneRequest;
  static deserializeBinaryFromReader(message: FriendshipSearchPhoneRequest, reader: jspb.BinaryReader): FriendshipSearchPhoneRequest;
}

export namespace FriendshipSearchPhoneRequest {
  export type AsObject = {
    phone: string,
  }
}

export class FriendshipSearchPhoneResponse extends jspb.Message {
  hasContactIdStringValueDeprecated(): boolean;
  clearContactIdStringValueDeprecated(): void;
  getContactIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setContactIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getContactId(): string;
  setContactId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipSearchPhoneResponse.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipSearchPhoneResponse): FriendshipSearchPhoneResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipSearchPhoneResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipSearchPhoneResponse;
  static deserializeBinaryFromReader(message: FriendshipSearchPhoneResponse, reader: jspb.BinaryReader): FriendshipSearchPhoneResponse;
}

export namespace FriendshipSearchPhoneResponse {
  export type AsObject = {
    contactIdStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    contactId: string,
  }
}

export class FriendshipSearchHandleRequest extends jspb.Message {
  getWeixin(): string;
  setWeixin(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipSearchHandleRequest.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipSearchHandleRequest): FriendshipSearchHandleRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipSearchHandleRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipSearchHandleRequest;
  static deserializeBinaryFromReader(message: FriendshipSearchHandleRequest, reader: jspb.BinaryReader): FriendshipSearchHandleRequest;
}

export namespace FriendshipSearchHandleRequest {
  export type AsObject = {
    weixin: string,
  }
}

export class FriendshipSearchHandleResponse extends jspb.Message {
  hasContactIdStringValueDeprecated(): boolean;
  clearContactIdStringValueDeprecated(): void;
  getContactIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setContactIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  getContactId(): string;
  setContactId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipSearchHandleResponse.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipSearchHandleResponse): FriendshipSearchHandleResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipSearchHandleResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipSearchHandleResponse;
  static deserializeBinaryFromReader(message: FriendshipSearchHandleResponse, reader: jspb.BinaryReader): FriendshipSearchHandleResponse;
}

export namespace FriendshipSearchHandleResponse {
  export type AsObject = {
    contactIdStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    contactId: string,
  }
}

export class FriendshipAddRequest extends jspb.Message {
  getContactId(): string;
  setContactId(value: string): void;

  getHello(): string;
  setHello(value: string): void;

  hasSourceRoomIdStringValueDeprecated(): boolean;
  clearSourceRoomIdStringValueDeprecated(): void;
  getSourceRoomIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setSourceRoomIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  hasSourceContactIdStringValueDeprecated(): boolean;
  clearSourceContactIdStringValueDeprecated(): void;
  getSourceContactIdStringValueDeprecated(): google_protobuf_wrappers_pb.StringValue | undefined;
  setSourceContactIdStringValueDeprecated(value?: google_protobuf_wrappers_pb.StringValue): void;

  hasReferrer(): boolean;
  clearReferrer(): void;
  getReferrer(): wechaty_puppet_referrer_pb.Referrer | undefined;
  setReferrer(value?: wechaty_puppet_referrer_pb.Referrer): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipAddRequest.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipAddRequest): FriendshipAddRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipAddRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipAddRequest;
  static deserializeBinaryFromReader(message: FriendshipAddRequest, reader: jspb.BinaryReader): FriendshipAddRequest;
}

export namespace FriendshipAddRequest {
  export type AsObject = {
    contactId: string,
    hello: string,
    sourceRoomIdStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    sourceContactIdStringValueDeprecated?: google_protobuf_wrappers_pb.StringValue.AsObject,
    referrer?: wechaty_puppet_referrer_pb.Referrer.AsObject,
  }
}

export class FriendshipAddResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipAddResponse.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipAddResponse): FriendshipAddResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipAddResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipAddResponse;
  static deserializeBinaryFromReader(message: FriendshipAddResponse, reader: jspb.BinaryReader): FriendshipAddResponse;
}

export namespace FriendshipAddResponse {
  export type AsObject = {
  }
}

export class FriendshipAcceptRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipAcceptRequest.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipAcceptRequest): FriendshipAcceptRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipAcceptRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipAcceptRequest;
  static deserializeBinaryFromReader(message: FriendshipAcceptRequest, reader: jspb.BinaryReader): FriendshipAcceptRequest;
}

export namespace FriendshipAcceptRequest {
  export type AsObject = {
    id: string,
  }
}

export class FriendshipAcceptResponse extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FriendshipAcceptResponse.AsObject;
  static toObject(includeInstance: boolean, msg: FriendshipAcceptResponse): FriendshipAcceptResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: FriendshipAcceptResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): FriendshipAcceptResponse;
  static deserializeBinaryFromReader(message: FriendshipAcceptResponse, reader: jspb.BinaryReader): FriendshipAcceptResponse;
}

export namespace FriendshipAcceptResponse {
  export type AsObject = {
  }
}

export interface FriendshipTypeMap {
  FRIENDSHIP_TYPE_UNSPECIFIED: 0;
  FRIENDSHIP_TYPE_CONFIRM: 1;
  FRIENDSHIP_TYPE_RECEIVE: 2;
  FRIENDSHIP_TYPE_VERIFY: 3;
}

export const FriendshipType: FriendshipTypeMap;

export interface FriendshipSceneTypeMap {
  FRIENDSHIP_SCENE_TYPE_UNSPECIFIED: 0;
  FRIENDSHIP_SCENE_TYPE_QQ: 1;
  FRIENDSHIP_SCENE_TYPE_EMAIL: 2;
  FRIENDSHIP_SCENE_TYPE_WEIXIN: 3;
  FRIENDSHIP_SCENE_TYPE_QQTBD: 12;
  FRIENDSHIP_SCENE_TYPE_ROOM: 14;
  FRIENDSHIP_SCENE_TYPE_PHONE: 15;
  FRIENDSHIP_SCENE_TYPE_CARD: 17;
  FRIENDSHIP_SCENE_TYPE_LOCATION: 18;
  FRIENDSHIP_SCENE_TYPE_BOTTLE: 25;
  FRIENDSHIP_SCENE_TYPE_SHAKING: 29;
  FRIENDSHIP_SCENE_TYPE_QRCODE: 30;
}

export const FriendshipSceneType: FriendshipSceneTypeMap;

